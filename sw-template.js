(()=>{importScripts("https://storage.googleapis.com/workbox-cdn/releases/7.1.0/workbox-sw.js");try{importScripts("./db.bundle.js")}catch(e){console.error("[SW] Failed DB import:",e),self.getOutboxItems=async()=>[],self.clearOutbox=async()=>{}}if(workbox){console.log(`[SW] Workbox ${workbox.core.version} loaded.`),workbox.precaching.precacheAndRoute([{'revision':null,'url':'/StoryApplicationDicoding/438.cf5f5d64b4bec0e7a739.bundle.js'},{'revision':'a09afd57099dc21e9263ff61a08dff24','url':'/StoryApplicationDicoding/438.cf5f5d64b4bec0e7a739.bundle.js.LICENSE.txt'},{'revision':'21a0a0a9b1fdb78eae4c9d97f7e90078','url':'/StoryApplicationDicoding/favicon.png'},{'revision':null,'url':'/StoryApplicationDicoding/favicon.png'},{'revision':null,'url':'/StoryApplicationDicoding/images/2b3e1faf89f94a483539.png'},{'revision':null,'url':'/StoryApplicationDicoding/images/416d91365b44e4b4f477.png'},{'revision':null,'url':'/StoryApplicationDicoding/images/8f2c4d11474275fbc161.png'},{'revision':'fc206a66d24fe8cc7b1376930538b2c0','url':'/StoryApplicationDicoding/images/icon-192.png'},{'revision':'6bb68d9ad73a48b80addf41f11c0cb5d','url':'/StoryApplicationDicoding/images/icon-512.png'},{'revision':'ac73f380ba0147f4fa5951dfaba2a665','url':'/StoryApplicationDicoding/images/logo.png'},{'revision':'0f0e8c2ca0e0d401daa8e46b3c112b80','url':'/StoryApplicationDicoding/index.html'},{'revision':null,'url':'/StoryApplicationDicoding/main.25cd9bab505d7309c0a0.bundle.js'},{'revision':null,'url':'/StoryApplicationDicoding/main.6b8a2cf28e5f6e536895.css'},{'revision':'35ea879e36da92d5b088ac1c5f972797','url':'/StoryApplicationDicoding/offline.html'},{'revision':null,'url':'/StoryApplicationDicoding/offline.html'},{'revision':null,'url':'/StoryApplicationDicoding/runtime.e80072061d9b4fcffc0b.bundle.js'}]);const{registerRoute:e,setCatchHandler:o}=workbox.routing,{NetworkFirst:t,StaleWhileRevalidate:n,CacheFirst:i}=workbox.strategies,{CacheableResponsePlugin:a}=workbox.cacheableResponse,{ExpirationPlugin:s}=workbox.expiration,{getCacheKeyForURL:c}=workbox.precaching;e((({url:e})=>e.href.startsWith("https://story-api.dicoding.dev/")),new t({cacheName:"dicoding-api-cache",plugins:[new a({statuses:[0,200]}),new s({maxEntries:100,maxAgeSeconds:2592e3})]})),e((({url:e})=>"https://fonts.googleapis.com"===e.origin||"https://fonts.gstatic.com"===e.origin),new n({cacheName:"google-fonts-cache",plugins:[new a({statuses:[0,200]}),new s({maxEntries:30,maxAgeSeconds:31536e3})]})),e((({url:e})=>e.href.startsWith("https://use.fontawesome.com/releases/")),new i({cacheName:"fontawesome-cache",plugins:[new a({statuses:[0,200]}),new s({maxEntries:2,maxAgeSeconds:31536e3})]}));const l="/StoryApplicationDicoding/offline.html";o((({event:e})=>"navigate"===e.request.mode?(console.log(`[SW] Fallback for navigation. Matching: ${l}`),caches.match(c(l)).then((e=>e||Response.error())).catch((e=>(console.error(`[SW] Offline fallback failed for ${l}:`,e),new Response("Offline page not available.",{status:503,statusText:"Offline",headers:{"Content-Type":"text/plain"}}))))):Response.error()))}else console.error("[SW] Workbox failed to load.");self.addEventListener("sync",(e=>{"outbox-sync"===e.tag&&(console.log("[SW] Sync: outbox-sync triggered"),e.waitUntil((async()=>{if("function"!=typeof self.getOutboxItems)return;const e=await self.getOutboxItems();if(e&&0!==e.length){for(const o of e)try{const e=new FormData;e.append("description",o.description),e.append("photo",o.photoBlob,o.photoFileName||"photo.jpg"),o.lat&&e.append("lat",o.lat),o.lon&&e.append("lon",o.lon);const t=await fetch("https://story-api.dicoding.dev/v1/stories",{method:"POST",headers:{Authorization:"Bearer "+o.token},body:e});if(!t.ok)throw new Error(`Sync failed: ${t.status}`);console.log("[SW] Synced item:",o.description)}catch(e){console.error("[SW] Sync error for item:",e)}"function"==typeof self.clearOutbox&&await self.clearOutbox()}})()))})),self.addEventListener("push",(e=>{console.log("[SW] Push Received");let o="Story App",t={body:"Ada notifikasi!",icon:"/StoryApplicationDicoding/images/icon-192.png",badge:"/StoryApplicationDicoding/images/icon-192.png",data:{url:"/StoryApplicationDicoding/"}};try{if(e.data){const n=e.data.json();o=n.title||o,t.body=n.body||t.body,t.icon=n.icon||t.icon,t.badge=n.badge||t.badge,t.data=n.data||t.data}else console.warn("[SW] No payload data found. Using fallback values.")}catch(e){console.warn("[SW] Failed to parse push event data:",e)}e.waitUntil(self.registration.showNotification(o,t))})),self.addEventListener("notificationclick",(e=>{console.log("[SW] Notification clicked");const o=e.notification?.data?.url||"/StoryApplicationDicoding/";e.notification.close(),e.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then((e=>{for(const t of e)if(t.url===self.location.origin+o&&"focus"in t)return t.focus();if(clients.openWindow)return clients.openWindow(o)})))})),self.addEventListener("install",(()=>{console.log("[SW] Installing..."),self.skipWaiting()})),self.addEventListener("activate",(e=>{console.log("[SW] Activating..."),e.waitUntil(clients.claim())}))})();
//# sourceMappingURL=sw-template.js.map