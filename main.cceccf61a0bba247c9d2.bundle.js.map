{"version":3,"file":"main.cceccf61a0bba247c9d2.bundle.js","mappings":"kMAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,sDAC5B,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,oCAAoC,MAAQ,GAAG,SAAW,iBAAiB,eAAiB,CAAC,uDAAuD,WAAa,MAEzM,S,uICGIC,EAAU,CAAC,EAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKJ,KAAW,IAAQM,QAAS,IAAQA,O,0CCnBnDC,eAAeC,EAAWC,GAC/B,MAAMC,EAAQC,aAAaC,QAAQ,SACnC,IAAKF,EAEH,YADAG,SAASC,KAAO,WAIlBL,EAAUM,UAAY,yUAYtB,MAAMC,EAAYC,SAASC,eAAe,aACvCF,GACCA,EAAUG,iBAAiB,SAAS,KAChCR,aAAaS,WAAW,SAEnBC,OAAOC,wBACRD,OAAOC,yBAEXT,SAASC,KAAO,SAAS,IAMjC,IAAIS,EAAU,GACVC,EAAc,KAElB,IACEC,QAAQC,IAAI,oCACZH,QC7CGhB,eAA4BG,GACjC,MAAMiB,QAAiBC,MAAM,uDAAwD,CACnFC,QAAS,CAAEC,cAAe,UAAYpB,KAElCqB,QAAaJ,EAASK,OAC5B,GAAID,EAAKE,MAAO,MAAM,IAAIC,MAAMH,EAAKI,SACrC,OAAOJ,EAAKK,WAAa,EAC3B,CDsCoBC,CAAa3B,GAC7Be,QAAQC,IAAI,WAAWH,EAAQe,0CACzBC,EAAAA,EAAAA,IAAiBhB,GACvBE,QAAQC,IAAI,wBACd,CAAE,MAAOc,GACPf,QAAQgB,KAAK,qCAAsCD,GACnD,IACIjB,QAAgBmB,EAAAA,EAAAA,MAChBjB,QAAQC,IAAI,UAAUH,EAAQe,4BACP,IAAnBf,EAAQe,SAEPrB,SAASC,eAAe,oBAAoBH,UAAY,6FAEjE,CAAE,MAAO4B,GACNlB,QAAQQ,MAAM,mCAAoCU,GAClD1B,SAASC,eAAe,oBAAoBH,UAAY,kDACxDQ,EAAU,EACb,CACF,EAqBF,SAA2BA,GACzB,MAAMd,EAAYQ,SAASC,eAAe,oBAC1C,IAAKT,EAAW,OAEhB,IAAKc,GAA8B,IAAnBA,EAAQe,OAErB,YADA7B,EAAUM,UAAY,uCAIzB,MAAM6B,EAAOrB,EAAQsB,KAAIC,GAAK,qCACEA,EAAE/C,gCACX+C,EAAE/C,8CACP+C,EAAEC,4BAA4BD,EAAEE,MAAQ,0FACVF,EAAE/C,gCAExC+C,EAAEE,MAAQ,4BACXF,EAAEG,aAAe,wBACbH,EAAEI,UAAY,IAAIC,KAAKL,EAAEI,WAAWE,iBAAmB,wCAEjEC,KAAK,IACR5C,EAAUM,UAAY6B,CACxB,CAvCEU,CAAkB/B,GAGlB,IACGC,EElEE,WACL,MAAMqB,EAAMU,IAAAA,IAAM,OAAOC,QAAQ,EAAE,OAAQ,UAAW,GAQtD,OANAD,IAAAA,UAAY,iFAAkF,CAC5FE,YAAa,oIACbC,SAAU,IACVC,YAAa,IACZC,MAAMf,GAEFA,CACT,CFwDmBgB,GACdtC,EAAQuC,SAAQhB,IACVA,EAAEiB,KAAOjB,EAAEkB,KExDf,SAAmBnB,EAAKkB,EAAKC,EAAKf,GACvC,IAAKJ,IAAQkB,IAAQC,EAAK,OAC1B,MAAMC,EAAOV,IAAAA,KAAO,CAClBW,QAAS,8DACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,MAGLd,IAAAA,OAAS,CAACQ,EAAKC,GAAM,CAAEC,SAAQL,MAAMf,GAC7CyB,UAAUrB,GAAe,iBAClC,CF8CSsB,CAAU/C,EAAasB,EAAEiB,IAAKjB,EAAEkB,IAAK,GAAGlB,EAAEE,MAAQ,cAAcF,EAAEG,aAAe,KACnF,GAEL,CAAE,MAAMuB,GACL/C,QAAQQ,MAAM,2CAA4CuC,EAE7D,CAEF,C,aGjFO,SAASC,EAAkBhE,EAAWV,GAC3C0B,QAAQC,IAAI,8BAA+B3B,GAE3C,MAAMW,EAAQC,aAAaC,QAAQ,SAC9BF,GAKLD,EAAUM,UAAY,oBAEtBa,MAAM,6CAA6C7B,IAAM,CACvD8B,QAAS,CACPC,cAAe,UAAYpB,KAG5BgE,MAAKC,IACJ,IAAKA,EAAIC,GAAI,MAAM,IAAI1C,MAAM,wBAC7B,OAAOyC,EAAI3C,MAAM,IAElB0C,MAAK3C,IACJ,MAAM8C,EAAQ9C,EAAK8C,MAEnBpE,EAAUM,UAAY,gEAEZ8D,EAAM7B,kCACA6B,EAAM9B,4BAA4B8B,EAAM7B,qKACrB6B,EAAM5B,kDACf,IAAIE,KAAK0B,EAAM3B,WAAWE,2HAInD,IAEF0B,OAAMtC,IACLf,QAAQQ,MAAM,uBAAwBO,GACtC/B,EAAUM,UAAY,gDAAgD,KA/BxEF,SAASC,KAAO,SAiCpB,CC7BA,MAAMiE,EAAS,CACb,IAAKvE,EACL,QAASA,EACT,SCZK,SAAqBC,GAC1BA,EAAUM,UAAY,+NAMxB,EDME,OERKR,eAAyBE,GAC9B,MAAMC,EAAQC,aAAaC,QAAQ,SACnC,IAAKF,EAEH,YADAG,SAASC,KAAO,WAIlB,IAAIkE,EAAS,KACTC,EAAY,KAEhBxE,EAAUM,UAAY,gnCAkCtB,MAAMmE,EAAejE,SAASC,eAAe,SACvCiE,EAAelE,SAASC,eAAe,UACvCkE,EAAenE,SAASC,eAAe,WACvCmE,EAAepE,SAASC,eAAe,YACvCoE,EAAerE,SAASC,eAAe,eACvCqE,EAAetE,SAASC,eAAe,iBACvCsE,EAAeL,EAAOM,WAAW,MACjCC,EAAezE,SAASC,eAAe,aAG7CoE,EAAYnE,iBAAiB,UAAU,KACrC,MAAMwE,EAA+B,WAAtBL,EAAYM,MAC3BL,EAAcM,MAAMC,QAAUH,EAAS,QAAU,OACjDN,EAAQQ,MAAMC,QAAeH,EAAS,OAAS,QAE3CA,EACFI,UAAUC,aAAaC,aAAa,CAAEf,OAAO,IAC1CR,MAAKwB,IACJlB,EAASkB,EACThB,EAAMiB,UAAYnB,CAAM,IAGxBA,GAAQA,EAAOoB,YAAYtC,SAAQuC,GAAKA,EAAEC,QAChD,IAIFlB,EAAWjE,iBAAiB,SAAS,KACnCqE,EAAQe,UAAUrB,EAAO,EAAG,EAAGC,EAAOqB,MAAOrB,EAAOsB,QACpDtB,EAAOuB,QAAOC,IACZ1B,EAAY0B,EACZC,MAAM,yBAAyB,GAC9B,aAAa,IAIlBlB,EAAKvE,iBAAiB,UAAUZ,UAC9BsG,EAAEC,iBAEF,MAAMC,EAAOrB,EAAKzC,YAAY2C,MAAMoB,OAC9BjD,EAAO2B,EAAK3B,IAAI6B,MAAMoB,OACtBhD,EAAO0B,EAAK1B,IAAI4B,MAAMoB,OAEtBC,EAAW,IAAIC,SAGrB,GAFAD,EAASE,OAAO,cAAeJ,GAEL,WAAtBzB,EAAYM,MAAoB,CAClC,IAAKX,EAEH,YADA2B,MAAM,qCAGRK,EAASE,OAAO,QAASlC,EAAW,YACtC,KAAO,CACL,GAA6B,IAAzBI,EAAQ+B,MAAM9E,OAEhB,YADAsE,MAAM,+BAGRK,EAASE,OAAO,QAAS9B,EAAQ+B,MAAM,GACzC,CAEIrD,GAAKkD,EAASE,OAAO,MAAOpD,GAC5BC,GAAKiD,EAASE,OAAO,MAAOnD,GAEhC,UChHGzD,eAAyBG,EAAOuG,GACrC,MAAMtF,QAAiBC,MAAM,4CAA6C,CACxEyF,OAAQ,OACRxF,QAAS,CAAEC,cAAe,UAAYpB,GACtC4G,KAAML,IAEFlF,QAAaJ,EAASK,OAC5B,GAAID,EAAKE,MAAO,MAAM,IAAIC,MAAMH,EAAKI,SACrC,OAAOJ,CACT,CDyGYwF,CAAU7G,EAAOuG,GACvBL,MAAM,yCACN/F,SAASC,KAAO,IAClB,CAAE,MAAO0B,GAMP,GAJAf,QAAQgB,KAAK,2CACP+E,EAAAA,EAAAA,IAAe,CAAE9G,QAAOuG,aAG1B,kBAAmBlB,WAAa,gBAAiB1E,OAAQ,CAC3D,MAAMoG,QAAY1B,UAAU2B,cAAcC,MAC1C,UACQF,EAAIG,KAAKC,SAAS,eACxBpG,QAAQC,IAAI,yCACd,CAAE,MAAOoG,GACPrG,QAAQQ,MAAM,uBAAwB6F,EACxC,CACF,CAEAlB,MAAM,qDACN/F,SAASC,KAAO,IAClB,KAIFO,OAAOF,iBAAiB,cAAc,KAChC6D,GAAQA,EAAOoB,YAAYtC,SAAQuC,GAAKA,EAAEC,QAAO,GACpD,CAAEyB,MAAM,IAGX,2CAAkBrD,MAAKnB,IACrB,MAAMV,EAAMU,EAAEV,IAAI,WAAWW,QAAQ,EAAE,IAAK,OAAQ,IACpDD,EAAEyE,UAAU,qDAAsD,CAChEvE,YAAa,yBACZG,MAAMf,GAET,MAAMoF,EAAa1E,EAAEU,KAAK,CACxBC,QAASgE,EACT/D,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,MAGnB,IAAI+D,EAAS5E,EAAE4E,OAAO,EAAE,IAAK,OAAQ,CACnCC,WAAW,EACXnE,KAAMgE,IACLrE,MAAMf,GAETsF,EAAOE,GAAG,WAAW,KACnB,MAAMC,EAAMH,EAAOI,YACnB7C,EAAK3B,IAAI6B,MAAQ0C,EAAIvE,IACrB2B,EAAK1B,IAAI4B,MAAQ0C,EAAIE,GAAG,IAG1B3F,EAAIwF,GAAG,SAAUxB,IACf,MAAM,IAAE9C,EAAG,IAAEyE,GAAQ3B,EAAE4B,OACvBN,EAAOO,UAAU,CAAC3E,EAAKyE,IACvB9C,EAAK3B,IAAI6B,MAAQ7B,EACjB2B,EAAK1B,IAAI4B,MAAQ4C,CAAG,GACpB,GAEN,EFhKE,SIXM,SAAqB/H,GAkB3BA,EAAUM,UAhBG,sbAkBb,MAAM2E,EAAOzE,SAASC,eAAe,aACrCwE,EAAKvE,iBAAiB,UAAUZ,UAC9BsG,EAAEC,iBACF,MAAM6B,EAAQjD,EAAKiD,MAAM/C,MACnBgD,EAAWlD,EAAKkD,SAAShD,MAE/B,IACE,MAAMjB,QAAY/C,MAAM,0CAA2C,CACjEyF,OAAQ,OACRxF,QAAS,CAAE,eAAgB,oBAC3ByF,KAAMuB,KAAKC,UAAU,CAAEH,QAAOC,eAE1B7G,QAAa4C,EAAI3C,OACvB,GAAID,EAAKE,MAAO,MAAM,IAAIC,MAAMH,EAAKI,SAErCxB,aAAaoI,QAAQ,QAAShH,EAAKiH,YAAYtI,OAG3CW,OAAOC,wBACPD,OAAOC,yBAEXT,SAASC,KAAO,QAClB,CAAE,MAAO0B,GACPoE,MAAM,gBAAkBpE,EAAIL,QAC9B,IAEJ,EJlCE,YKdK,SAAwB1B,GAoB7BA,EAAUM,UAnBG,siBAqBb,MAAM2E,EAAOzE,SAASC,eAAe,gBACrCwE,EAAKvE,iBAAiB,UAAUZ,UAC9BsG,EAAEC,iBACF,MAAM9D,EAAO0C,EAAK1C,KAAK4C,MACjB+C,EAAQjD,EAAKiD,MAAM/C,MACnBgD,EAAWlD,EAAKkD,SAAShD,MAE/B,IACE,MAAMjB,QAAY/C,MAAM,6CAA8C,CACpEyF,OAAQ,OACRxF,QAAS,CAAE,eAAgB,oBAC3ByF,KAAMuB,KAAKC,UAAU,CAAE9F,OAAM2F,QAAOC,eAEhC7G,QAAa4C,EAAI3C,OACvB,GAAID,EAAKE,MAAO,MAAM,IAAIC,MAAMH,EAAKI,SAErCyE,MAAM,uCACN/F,SAASC,KAAO,SAClB,CAAE,MAAO0B,GACPoE,MAAM,qBAAuBpE,EAAIL,QACnC,IAEJ,EL7BE,WMbM5B,eAAoCE,GACzCA,EAAUM,UAAY,kMAOtB,MAAMkI,EAAmBhI,SAASC,eAAe,2BACjD,GAAK+H,EAEL,IACE,MAAM1H,QAAgBmB,EAAAA,EAAAA,MACtB,GAAInB,GAAWA,EAAQe,OAAS,EAAG,CACjC,MAAMM,EAAOrB,EAAQsB,KAAIC,GAAK,0CACEA,EAAE/C,qCACX+C,EAAE/C,mDACP+C,EAAEC,4BAA4BD,EAAEE,MAAQ,+FACVF,EAAE/C,0CAExC+C,EAAEE,MAAQ,iCACXF,EAAEG,aAAe,6BACbH,EAAEI,UAAY,IAAIC,KAAKL,EAAEI,WAAWE,iBAAmB,kDAEjEC,KAAK,IACR4F,EAAiBlI,UAAY6B,CAC/B,MACEqG,EAAiBlI,UAAY,sDAEjC,CAAE,MAAOyB,GACPf,QAAQQ,MAAM,mCAAoCO,GAClDyG,EAAiBlI,UAAY,uCAC/B,CACF,GNjBD,SAASmI,IACPzH,QAAQC,IAAI,6BACZ,MAAMyH,EAAMlI,SAASC,eAAe,OACpC,IAAKiI,EAEH,YADA1H,QAAQQ,MAAM,oCAIhB,MAAMnB,EAAOD,SAASC,MAAQ,KAC9B,IAAIsI,EAAYtI,EAAKuI,QAAQ,KAAM,IAG/BD,IAAcA,EAAUE,WAAW,KACrCF,EAAY,IAAMA,EACK,KAAdA,IACTA,EAAY,KAEd3H,QAAQC,IAAI,mBAAmBZ,cAAiBsI,MAGhD,MAAMG,EAAaH,EAAUI,MAAM,kBACnC,GAAID,EAAY,CACd,MAAME,EAAUF,EAAW,GAC3B9H,QAAQC,IAAI,2CAA2C+H,KACvD,MAAMC,EAAmBjF,EAMzB,YALIxD,SAAS0I,oBACX1I,SAAS0I,qBAAoB,IAAMD,EAAiBP,EAAKM,KAEzDC,EAAiBP,EAAKM,GAG1B,CAGA,MAAMG,EAAS7E,EAAOqE,GAItB,GAHA3H,QAAQC,IAAI,wBAAwB0H,MAAeQ,EAAS,QAAU,cAGjEA,EAGH,OAFAnI,QAAQQ,MAAM,uCAAuCmH,WACrDD,EAAIpI,UAAY,kCAIlBU,QAAQC,IAAI,6BAA6B0H,MACzC,MAAMS,EAAWA,IAAMD,EAAOT,GAE1BlI,SAAS0I,oBACX1I,SAAS0I,oBAAoBE,GAE7BA,GAEJ,COrEA,MAEMC,EAAyBC,IAE7B,MACMC,GAAUD,EADA,IAAIE,QAAQ,EAAKF,EAAazH,OAAS,GAAM,IAE1D+G,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACXa,EAAUC,KAAKH,GACrB,OAAOI,WAAWC,KAAK,IAAIH,GAASrH,KAAKyH,GAASA,EAAKC,WAAW,KAAI,ECiGxEhK,eAAeiK,IACb,MAAMC,EAAsBxJ,SAASC,eAAe,yBAC9CwJ,EAAwBzJ,SAASC,eAAe,2BAChDyJ,EAAc1J,SAASC,eAAe,qBACtC0J,EAAgB3J,SAASC,eAAe,uBACxC2J,IAAelK,aAAaC,QAAQ,SAI1C,GAHAa,QAAQC,IAAI,+CAAgDmJ,GAGvDF,GAAgBC,GAAkBH,GAAwBC,EAA/D,CAeA,GANAD,EAAoBK,UAAW,EAC/BL,EAAoB1J,UAAY,wCAChC2J,EAAsBI,UAAW,EACjCJ,EAAsB3J,UAAY,kDAG7B8J,GAAgB,iBAAkBxJ,QAAa,kBAAmB0E,WAAgB,gBAAgB1E,QAInG,OAHAI,QAAQC,IAAI,yDACZiJ,EAAY9E,MAAMC,QAAU,YAC5B8E,EAAc/E,MAAMC,QAAU,QAIlC,IACI,MAAMiF,QDtBLxK,iBACH,KAAM,iBAAkBc,WAAa,kBAAmB0E,cAAgB,gBAAiB1E,QACrF,MAAO,CAAE2J,WAAW,EAAOC,WAAY,UAAWC,cAAc,GAGpE,MAAMD,EAAaE,aAAaF,WAC1BG,QAAqBrF,UAAU2B,cAAcC,MAGnD,MAAO,CACHqD,WAAW,EACXC,WAAYA,EACZC,qBALuBE,EAAaC,YAAYC,kBAOxD,CCQ0BC,GACpB9J,QAAQC,IAAI,2BAA4BqJ,GACnCA,EAAMG,cACNzJ,QAAQC,IAAI,+BACZiJ,EAAY9E,MAAMC,QAAU,OAC5B8E,EAAc/E,MAAMC,QAAU,aACF,YAArBiF,EAAME,YACbxJ,QAAQC,IAAI,6BACZiJ,EAAY9E,MAAMC,QAAU,YAC5B8E,EAAc/E,MAAMC,QAAU,SAE9BrE,QAAQC,IAAI,8DACZiJ,EAAY9E,MAAMC,QAAU,YAC5B8E,EAAc/E,MAAMC,QAAU,OACL,WAArBiF,EAAME,aACPR,EAAoBK,UAAW,EAC/BL,EAAoBe,YAAc,qBAG9C,CAAE,MAAOvJ,GACNR,QAAQQ,MAAM,0BAA2BA,GAEzC0I,EAAY9E,MAAMC,QAAU,OAC5B8E,EAAc/E,MAAMC,QAAU,MACjC,CA1CA,MAJKrE,QAAQgB,KAAK,kCA+CpB,CACA,SAASgJ,IACPjB,GAEF,CA9JAvJ,SAASE,iBAAiB,oBAAoBZ,URgE5Cc,OAAOqK,oBAAoB,aAAcxC,GACzC7H,OAAOqK,oBAAoB,OAAQxC,GACnC7H,OAAOF,iBAAiB,aAAc+H,GACtC7H,OAAOF,iBAAiB,OAAQ+H,GAChCzH,QAAQC,IAAI,uDQtCd,WACI,MAAMiK,EAAe1K,SAASC,eAAe,iBACvC0K,EAAmB3K,SAASC,eAAe,qBAC3CuJ,EAAsBxJ,SAASC,eAAe,yBAC9CwJ,EAAwBzJ,SAASC,eAAe,2BAElDyK,GAAgBC,IAChBD,EAAaxK,iBAAiB,SAAS,KACnCyK,EAAiBC,UAAUC,OAAO,OAAO,IAI7C7K,SAASqG,KAAKnG,iBAAiB,SAAU4K,IAClCH,EAAiBI,SAASD,EAAME,SAAYN,EAAaK,SAASD,EAAME,SAC3EL,EAAiBC,UAAUK,OAAO,OACpC,IAEFN,EAAiBzK,iBAAiB,SAAU4K,IAEZ,MAAzBA,EAAME,OAAOE,SAAmBJ,EAAME,OAAOG,aAAa,SAAS9C,WAAW,MAC7EsC,EAAiBC,UAAUK,OAAO,OACvC,KAKHzB,GACAA,EAAoBtJ,iBAAiB,SAASZ,UAC1C,MAAMG,EAAQC,aAAaC,QAAQ,SACnC,GAAKF,EAAL,CAIA,UD3DLH,iBACH,KAAM,iBAAkBc,QACpB,MAAM,IAAIa,MAAM,gDAGpB,MAAM+I,QAAmBE,aAAakB,oBACtC,GAAmB,YAAfpB,EACA,MAAM,IAAI/I,MAAM,mCAEpB,OAAO+I,CACX,CCkDsBqB,SD9Cf/L,eAA6BgM,GAClC,KAAM,kBAAmBxG,cAAgB,gBAAiB1E,QACxD,MAAM,IAAIa,MAAM,qCAElB,IAAKqK,EACD,MAAM,IAAIrK,MAAM,kDAIpB,MAAM+I,EAAaE,aAAaF,WAChC,GAAmB,YAAfA,EACA,MAAM,IAAI/I,MAAM,8BAA8B+I,+BAGlD,IACE,MAAMG,QAAqBrF,UAAU2B,cAAcC,MACnD,IAAI6E,QAAqBpB,EAAaC,YAAYC,kBAElD,OAAIkB,GACF/K,QAAQC,IAAI,sBAAuB8K,GAG5BA,IAGTA,QAAqBpB,EAAaC,YAAYoB,UAAU,CACtDC,iBAAiB,EACjBC,qBAAsB7C,EAtDH,6FAyDrBrI,QAAQC,IAAI,8BAA+B8K,SA6E/CjM,eAAwCiM,EAAcD,GACpD,MAAMK,EAAUJ,EAAaK,gBAEtBD,EAAQE,eAEf,MAAMnL,QAAiBC,MACrB,4DACA,CACEyF,OAAQ,OACRxF,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAUyK,KAE3BjF,KAAMuB,KAAKC,UAAU8D,KAInBG,QAAepL,EAASK,OAG9B,GAFAP,QAAQC,IAAI,2CAA4CqL,IAEnDpL,EAASiD,GACZ,MAAM,IAAI1C,MAAM6K,EAAO5K,SAAW,iCAEtC,CAnGU6K,CAAyBR,EAAcD,GACtCC,EAET,CAAE,MAAOhK,GAGP,GAFAf,QAAQQ,MAAM,yBAA0BO,GAEvB,eAAbA,EAAIQ,MAAyBR,EAAIL,QAAQ8K,SAAS,aAAc,CAChE,MAAM7B,QAAqBrF,UAAU2B,cAAcwF,kBAC7CC,QAA4B/B,GAAcC,aAAaC,mBACzD6B,UACKA,EAAoBC,cAC1B3L,QAAQC,IAAI,2CAEnB,CACA,MAAMc,CACR,CACF,CCAsB6K,CAAc3M,GACpBkG,MAAM,qCACN4D,GACJ,CAAE,MAAOhI,GACLf,QAAQQ,MAAM,iCAAkCO,GAChDoE,MAAM,uBAAuBpE,EAAIL,UACrC,CACIyJ,GAAkBA,EAAiBC,UAAUK,OAAO,OAVxD,MAFItF,MAAM,+DAYqD,IAInE8D,GACAA,EAAsBvJ,iBAAiB,SAASZ,UAC5C,MAAMG,EAAQC,aAAaC,QAAQ,SACnC,GAAKF,EAAL,CAIA,UDfLH,eAA+BgM,GACpC,KAAM,kBAAmBxG,cAAgB,gBAAiB1E,QACxD,MAAM,IAAIa,MAAM,qCAEjB,IAAKqK,EACF,MAAM,IAAIrK,MAAM,oDAGpB,IACE,MAAMkJ,QAAqBrF,UAAU2B,cAAcC,MAC7C6E,QAAqBpB,EAAaC,YAAYC,kBAEpD,IAAKkB,EAEH,OADA/K,QAAQC,IAAI,8BACL,EAGTD,QAAQC,IAAI,wBAAyB8K,SAkEzCjM,eAA4CiM,EAAcD,GACrD,MAEMe,EAAc,CAAEC,SAFNf,EAAaK,SAEWU,UAElC5L,QAAiBC,MACnB,8DACA,CACIyF,OAAQ,OACRxF,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUyK,KAE7BjF,KAAMuB,KAAKC,UAAUwE,KAIvBP,QAAepL,EAASK,OAAO8C,OAAM,KAAM,CAAG,KACpDrD,QAAQC,IAAI,6CAA8CqL,GAErDpL,EAASiD,IAEVnD,QAAQQ,MAAM,8BAA8BN,EAAS6L,YAAYT,EAAO5K,SAAW,yBAG5F,CAxFUsL,CAA6BjB,EAAcD,GAGjD,MAAMmB,QAAqBlB,EAAaY,cAMxC,OALIM,EACFjM,QAAQC,IAAI,wCAEZD,QAAQgB,KAAK,6CAERiL,CAET,CAAE,MAAOlL,GAGP,MAFAf,QAAQQ,MAAM,2BAA4BO,GAEpCA,CACR,CACF,CCpBsBmL,CAAgBjN,GACtBkG,MAAM,8CACN4D,GACJ,CAAE,MAAOhI,GACLf,QAAQQ,MAAM,+BAAgCO,GAC9CoE,MAAM,gCAAgCpE,EAAIL,UAC9C,CACKyJ,GAAkBA,EAAiBC,UAAUK,OAAO,OATzD,MAFItF,MAAM,iCAWsD,IAGxE4D,GACJ,CAvFEoD,GAGA,MAAMC,EAAW5M,SAAS6M,cAAc,cACpCD,GACAA,EAAS1M,iBAAiB,SAAU0F,IAChCA,EAAEC,iBACF,MAAMiH,EAAO9M,SAASC,eAAe,OACjC6M,IACAA,EAAKC,aAAa,WAAY,MAC9BD,EAAKE,QACT,IAKRxC,GAAqB,IAwIvBpK,OAAOC,uBAAyBmK,C,iECxKhC,MAEMyC,EAAgB,UAChBC,EAAe,SAEfC,GAAYC,EAAAA,EAAAA,IALF,YACG,EAI2B,CAC5CC,OAAAA,CAAQC,GACDA,EAAGC,iBAAiBxC,SAASkC,IAChCK,EAAGE,kBAAkBP,EAAe,CAAEQ,QAAS,OAE5CH,EAAGC,iBAAiBxC,SAASmC,IAChCI,EAAGE,kBAAkBN,EAAc,CAAEQ,eAAe,GAExD,IAGKpO,eAAegC,EAAiBhB,GACrC,MACMqN,SADWR,GACHS,YAAYX,EAAe,aACzC,IAAK,MAAMpL,KAAKvB,EACVuB,EAAE/C,GACJ6O,EAAGE,MAAMC,IAAIjM,GAEbrB,QAAQgB,KAAK,4BAA6BK,SAGxC8L,EAAGI,IACX,CAEOzO,eAAemC,IAEpB,aADiB0L,GACPa,OAAOf,EACnB,CAEO3N,eAAeiH,EAAe0H,GACnC,MACMN,SADWR,GACHS,YAAYV,EAAc,cAGlC,MAAEzN,EAAK,SAAEuG,GAAaiI,EACtBjM,EAAcgE,EAASkI,IAAI,eAC3BC,EAAYnI,EAASkI,IAAI,SACzBpL,EAAMkD,EAASkI,IAAI,OACnBnL,EAAMiD,EAASkI,IAAI,OAGnBE,EAAc,CAClB3O,MAAOA,EACPuC,YAAaA,EACbmM,UAAWA,EACXE,cANoBF,aAAqBG,KAAOH,EAAUpM,KAAO,YAOjEe,IAAKA,GAAO,KACZC,IAAKA,GAAO,KACZwL,WAAW,IAAIrM,MAAOsM,eAIxBhO,QAAQC,IAAI,qBAAsB2N,SAC5BT,EAAGE,MAAMY,IAAIL,SACbT,EAAGI,KACTvN,QAAQC,IAAI,8BACd,C","sources":["webpack://app-starter-project-with-webpack/./src/styles/style.css?e274","webpack://app-starter-project-with-webpack/./src/styles/style.css?ecaf","webpack://app-starter-project-with-webpack/./src/scripts/views/home.js","webpack://app-starter-project-with-webpack/./src/scripts/presenters/homePresenter.js","webpack://app-starter-project-with-webpack/./src/scripts/map.js","webpack://app-starter-project-with-webpack/./src/scripts/views/story-detail.js","webpack://app-starter-project-with-webpack/./src/scripts/router.js","webpack://app-starter-project-with-webpack/./src/scripts/views/about.js","webpack://app-starter-project-with-webpack/./src/scripts/views/add.js","webpack://app-starter-project-with-webpack/./src/scripts/presenters/addPresenter.js","webpack://app-starter-project-with-webpack/./src/scripts/views/login.js","webpack://app-starter-project-with-webpack/./src/scripts/views/register.js","webpack://app-starter-project-with-webpack/./src/scripts/views/offline.js","webpack://app-starter-project-with-webpack/./src/scripts/push-subscription.js","webpack://app-starter-project-with-webpack/./src/scripts/index.js","webpack://app-starter-project-with-webpack/./src/scripts/db.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `// extracted by mini-css-extract-plugin\nexport {};`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/style.css\"],\"names\":[],\"mappings\":\"AAAA;QACQ,CAAA\",\"sourcesContent\":[\"// extracted by mini-css-extract-plugin\\nexport {};\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","// src/scripts/home.js\r\nimport { initMap, addMarker } from '../map'; // Assuming ../map is correct path\r\nimport { fetchStories } from '../presenters/homePresenter';\r\nimport { saveStoriesToIDB, getStoriesFromIDB } from '../db.js';\r\n// Remove deleteStoryFromIDB import:\r\n// import { deleteStoryFromIDB } from '../db.js';\r\n\r\nexport async function renderHome(container) {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    location.hash = '#/login';\r\n    return;\r\n  }\r\n\r\n  container.innerHTML = `\r\n    <section class=\"page home-page\">\r\n      <a id=\"mainContent\" tabindex=\"-1\"></a>\r\n      <h2>Semua Cerita</h2>\r\n      <button id=\"logoutBtn\">Logout</button> <div id=\"storiesContainer\">Memuat cerita…</div>\r\n      <div style=\"width:100%;\">\r\n        <div id=\"map\" class=\"map-fullwidth\"></div>\r\n      </div>\r\n    </section>\r\n  `;\r\n\r\n  // --- Logout Button ---\r\n  const logoutBtn = document.getElementById('logoutBtn');\r\n  if(logoutBtn) {\r\n      logoutBtn.addEventListener('click', () => {\r\n          localStorage.removeItem('token');\r\n          // Update UI after logout\r\n           if (window.appUpdateLoginStatusUI) {\r\n              window.appUpdateLoginStatusUI();\r\n          }\r\n          location.hash = '#/login';\r\n      });\r\n  }\r\n\r\n\r\n  // --- Load and Render Stories ---\r\n  let stories = [];\r\n  let mapInstance = null; // Hold map instance\r\n\r\n  try {\r\n    console.log(\"Fetching stories from network...\");\r\n    stories = await fetchStories(token);\r\n    console.log(`Fetched ${stories.length} stories. Saving to IDB...`);\r\n    await saveStoriesToIDB(stories);\r\n    console.log(\"Stories saved to IDB.\");\r\n  } catch (err) {\r\n    console.warn('Fetch failed, falling back to IDB:', err);\r\n    try {\r\n        stories = await getStoriesFromIDB();\r\n        console.log(`Loaded ${stories.length} stories from IDB.`);\r\n        if (stories.length === 0) {\r\n            // Optional: Show a specific message if offline and IDB is empty\r\n             document.getElementById('storiesContainer').innerHTML = '<p>Gagal memuat cerita. Coba lagi saat online atau lihat cerita offline jika tersedia.</p>';\r\n        }\r\n    } catch (idbError) {\r\n       console.error(\"Failed to load stories from IDB:\", idbError);\r\n       document.getElementById('storiesContainer').innerHTML = '<p>Gagal memuat cerita dari sumber manapun.</p>';\r\n       stories = []; // Ensure stories is an empty array on complete failure\r\n    }\r\n  }\r\n\r\n  // Render stories to the DOM\r\n  renderStoriesList(stories); // Renamed function\r\n\r\n  // Initialize map and add markers\r\n  try {\r\n     mapInstance = initMap(); // Assuming initMap is synchronous or handles async internally\r\n     stories.forEach(s => {\r\n       if (s.lat && s.lon) {\r\n         addMarker(mapInstance, s.lat, s.lon, `${s.name || 'Unknown'}: ${s.description || ''}`);\r\n       }\r\n     });\r\n  } catch(mapError) {\r\n     console.error(\"Failed to initialize map or add markers:\", mapError);\r\n     // Handle map initialization error if necessary\r\n  }\r\n\r\n} // End of renderHome\r\n\r\n\r\nfunction renderStoriesList(stories) { // Renamed function\r\n  const container = document.getElementById('storiesContainer');\r\n  if (!container) return;\r\n\r\n  if (!stories || stories.length === 0) {\r\n     container.innerHTML = 'Tidak ada cerita untuk ditampilkan.';\r\n     return;\r\n  }\r\n\r\n  const html = stories.map(s => `\r\n    <div class=\"story\" data-id=\"${s.id}\">\r\n      <a href=\"#/story/${s.id}\" class=\"story-link\">\r\n        <img src=\"${s.photoUrl}\" alt=\"Foto oleh ${s.name || 'Unknown'}\" loading=\"lazy\" width=\"200\"\r\n             style=\"view-transition-name: story-${s.id};\">\r\n      </a>\r\n      <h4>${s.name || 'Unknown'}</h4>\r\n      <p>${s.description || ''}</p>\r\n      <small>${s.createdAt ? new Date(s.createdAt).toLocaleString() : 'No date'}</small>\r\n      </div>\r\n  `).join('');\r\n  container.innerHTML = html;\r\n}\r\n\r\n// Remove the attachDeleteHandlers function entirely\r\n// function attachDeleteHandlers() { ... }","export async function fetchStories(token) {\r\n  const response = await fetch('https://story-api.dicoding.dev/v1/stories?location=1', {\r\n    headers: { Authorization: 'Bearer ' + token }\r\n  });\r\n  const data = await response.json();\r\n  if (data.error) throw new Error(data.message);\r\n  return data.listStory || [];\r\n}","\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nexport function initMap() {\r\n  const map = L.map('map').setView([-2.5489, 118.0149], 5);\r\n\r\n  L.tileLayer('https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?key=EjgIQQJl93uRBUQIPRGe', {\r\n    attribution: '&copy; <a href=\"https://www.maptiler.com\">MapTiler</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n    tileSize: 512,\r\n    zoomOffset: -1\r\n  }).addTo(map);\r\n\r\n  return map;\r\n}\r\n\r\nexport function addMarker(map, lat, lon, description) {\r\n  if (!map || !lat || !lon) return;\r\n  const icon = L.icon({\r\n    iconUrl: 'https://unpkg.com/leaflet@1.9.3/dist/images/marker-icon.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34]\r\n  });\r\n\r\n  const marker = L.marker([lat, lon], { icon }).addTo(map);\r\n  marker.bindPopup(description || 'No description');\r\n}\r\n","export function renderStoryDetail(container, id) {\r\n  console.log('Loaded story detail for ID:', id); // Log untuk debug ID\r\n\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    location.hash = '#/login';\r\n    return;\r\n  }\r\n\r\n  container.innerHTML = '<p>Loading...</p>';\r\n\r\n  fetch(`https://story-api.dicoding.dev/v1/stories/${id}`, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + token\r\n    }\r\n  })\r\n    .then(res => {\r\n      if (!res.ok) throw new Error('Gagal mengambil data');\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      const story = data.story;\r\n\r\n      container.innerHTML = `\r\n        <section class=\"page story-detail\">\r\n          <h2>${story.name}</h2>\r\n          <img src=\"${story.photoUrl}\" alt=\"Foto oleh ${story.name}\" class=\"story-image\" style=\"max-width: 500px; width: 100%; display: block; border-radius: 12px; margin: 20px auto;\">\r\n          <p style=\"margin-top: 20px;\">${story.description}</p>\r\n          <small>Dibuat pada: ${new Date(story.createdAt).toLocaleString()}</small>\r\n          <br><br>\r\n          <a href=\"#/\">← Kembali ke Beranda</a>\r\n        </section>\r\n      `;\r\n    })\r\n    .catch(err => {\r\n      console.error('Gagal memuat cerita:', err);\r\n      container.innerHTML = '<p>Gagal memuat cerita. Silakan coba lagi.</p>';\r\n    });\r\n}\r\n","import { renderHome } from './views/home';\r\nimport { renderAbout } from './views/about';\r\nimport { renderAdd } from './views/add';\r\nimport { renderLogin } from './views/login';\r\nimport { renderRegister } from './views/register';\r\nimport { renderStoryDetail } from './views/story-detail';\r\nimport { renderOfflineStories } from './views/offline';\r\n\r\n\r\nconst routes = {\r\n  '/': renderHome,\r\n  '/home': renderHome,\r\n  '/about': renderAbout,\r\n  '/add': renderAdd,\r\n  '/login': renderLogin,\r\n  '/register': renderRegister,\r\n  '/offline': renderOfflineStories, \r\n};\r\n\r\nfunction loadPage() {\r\n  console.log('[Router] loadPage called.');\r\n  const app = document.getElementById('app');\r\n  if (!app) {\r\n    console.error('[Router] #app element not found!');\r\n    return;\r\n  }\r\n\r\n  const hash = location.hash || '#/';\r\n  let routePath = hash.replace(/^#/, '');\r\n\r\n  // Ensure leading slash\r\n  if (routePath && !routePath.startsWith('/')) {\r\n    routePath = '/' + routePath;\r\n  } else if (routePath === '') {\r\n    routePath = '/';\r\n  }\r\n  console.log(`[Router] Hash: \"${hash}\", Path: \"${routePath}\"`);\r\n\r\n  // Handle dynamic /story/:id route\r\n  const storyMatch = routePath.match(/^\\/story\\/(.+)/);\r\n  if (storyMatch) {\r\n    const storyId = storyMatch[1];\r\n    console.log(`[Router] Matched /story/ route with ID: ${storyId}`);\r\n    const renderDetailFunc = renderStoryDetail;\r\n    if (document.startViewTransition) {\r\n      document.startViewTransition(() => renderDetailFunc(app, storyId));\r\n    } else {\r\n      renderDetailFunc(app, storyId);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // Handle static routes\r\n  const render = routes[routePath];\r\n  console.log(`[Router] Lookup for \"${routePath}\":`, render ? 'Found' : 'Not Found');\r\n\r\n\r\n  if (!render) {\r\n    console.error(`[Router] Route not found for path: \"${routePath}\"`);\r\n    app.innerHTML = '<p>Halaman tidak ditemukan</p>';\r\n    return;\r\n  }\r\n\r\n  console.log(`[Router] Rendering route \"${routePath}\"`);\r\n  const doRender = () => render(app);\r\n\r\n  if (document.startViewTransition) {\r\n    document.startViewTransition(doRender);\r\n  } else {\r\n    doRender();\r\n  }\r\n}\r\n\r\n// --- Initialize Router ---\r\nexport function initRouter() {\r\n  window.removeEventListener('hashchange', loadPage);\r\n  window.removeEventListener('load', loadPage);\r\n  window.addEventListener('hashchange', loadPage);\r\n  window.addEventListener('load', loadPage);\r\n  console.log(\"[Router] Router initialized and listeners attached.\");\r\n}","export function renderAbout(container) {\r\n  container.innerHTML = `\r\n    <section class=\"page about-page\">\r\n      <h2>Tentang Aplikasi</h2>\r\n      <p>Aplikasi ini dibuat untuk menampilkan cerita dari pengguna dengan lokasi di peta menggunakan Leaflet dan MapTiler.</p>\r\n    </section>\r\n  `;\r\n}","import { postStory } from '../presenters/addPresenter';\r\nimport { saveOutboxItem } from '../db.js';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\r\n\r\nexport async function renderAdd(container) {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    location.hash = '#/login';\r\n    return;\r\n  }\r\n\r\n  let stream = null;\r\n  let imageBlob = null;\r\n\r\n  container.innerHTML = `\r\n    <section class=\"page add-page\">\r\n      <h2>Tambah Cerita</h2>\r\n      <form id=\"storyForm\">\r\n        <label for=\"description\">Deskripsi</label>\r\n        <input type=\"text\" id=\"description\" required />\r\n\r\n        <label for=\"photoMethod\">Foto</label>\r\n        <select id=\"photoMethod\">\r\n          <option value=\"file\">Upload File</option>\r\n          <option value=\"camera\">Gunakan Kamera</option>\r\n        </select>\r\n\r\n        <div id=\"cameraSection\" style=\"display: none;\">\r\n          <video id=\"video\" width=\"320\" height=\"240\" autoplay></video>\r\n          <button type=\"button\" id=\"capture\">Ambil Foto</button>\r\n          <canvas id=\"canvas\" width=\"320\" height=\"240\" style=\"display: none;\"></canvas>\r\n        </div>\r\n\r\n        <input type=\"file\" id=\"altPhoto\" accept=\"image/*\" />\r\n\r\n        <label for=\"lat\">Latitude</label>\r\n        <input type=\"text\" id=\"lat\" />\r\n\r\n        <label for=\"lon\">Longitude</label>\r\n        <input type=\"text\" id=\"lon\" />\r\n\r\n        <div id=\"mapForm\" class=\"map-fullwidth\" style=\"margin-bottom: 1rem;\"></div>\r\n\r\n        <button type=\"submit\">Kirim Cerita</button>\r\n      </form>\r\n    </section>\r\n  `;\r\n\r\n  const video        = document.getElementById('video');\r\n  const canvas       = document.getElementById('canvas');\r\n  const captureBtn   = document.getElementById('capture');\r\n  const altFile      = document.getElementById('altPhoto');\r\n  const photoMethod  = document.getElementById('photoMethod');\r\n  const cameraSection= document.getElementById('cameraSection');\r\n  const context      = canvas.getContext('2d');\r\n  const form         = document.getElementById('storyForm');\r\n\r\n  // Toggle camera vs file input\r\n  photoMethod.addEventListener('change', () => {\r\n    const useCam = photoMethod.value === 'camera';\r\n    cameraSection.style.display = useCam ? 'block' : 'none';\r\n    altFile.style.display      = useCam ? 'none' : 'block';\r\n\r\n    if (useCam) {\r\n      navigator.mediaDevices.getUserMedia({ video: true })\r\n        .then(camStream => {\r\n          stream = camStream;\r\n          video.srcObject = stream;\r\n        });\r\n    } else {\r\n      if (stream) stream.getTracks().forEach(t => t.stop());\r\n    }\r\n  });\r\n\r\n  // Capture photo from video\r\n  captureBtn.addEventListener('click', () => {\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    canvas.toBlob(blob => {\r\n      imageBlob = blob;\r\n      alert('Foto berhasil diambil!');\r\n    }, 'image/jpeg');\r\n  });\r\n\r\n  // Handle form submission\r\n  form.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n\r\n    const desc = form.description.value.trim();\r\n    const lat  = form.lat.value.trim();\r\n    const lon  = form.lon.value.trim();\r\n\r\n    const formData = new FormData();\r\n    formData.append('description', desc);\r\n\r\n    if (photoMethod.value === 'camera') {\r\n      if (!imageBlob) {\r\n        alert('Harap ambil foto terlebih dahulu.');\r\n        return;\r\n      }\r\n      formData.append('photo', imageBlob, 'photo.jpg');\r\n    } else {\r\n      if (altFile.files.length === 0) {\r\n        alert('Pilih file terlebih dahulu.');\r\n        return;\r\n      }\r\n      formData.append('photo', altFile.files[0]);\r\n    }\r\n\r\n    if (lat) formData.append('lat', lat);\r\n    if (lon) formData.append('lon', lon);\r\n\r\n    try {\r\n      // 1) Coba kirim langsung ke API\r\n      await postStory(token, formData);\r\n      alert('Cerita berhasil ditambahkan (online).');\r\n      location.hash = '#/';\r\n    } catch (err) {\r\n      // 2) Jika gagal (misal offline), simpan ke outbox IndexedDB\r\n      console.warn('Offline: simpan cerita ke outbox…');\r\n      await saveOutboxItem({ token, formData });\r\n\r\n      // 3) Daftarkan background sync (jika didukung)\r\n      if ('serviceWorker' in navigator && 'SyncManager' in window) {\r\n        const reg = await navigator.serviceWorker.ready;\r\n        try {\r\n          await reg.sync.register('outbox-sync');\r\n          console.log('Background sync terdaftar: outbox-sync');\r\n        } catch (syncErr) {\r\n          console.error('Gagal register sync:', syncErr);\r\n        }\r\n      }\r\n\r\n      alert('Offline. Cerita akan dikirim saat online kembali.');\r\n      location.hash = '#/';\r\n    }\r\n  });\r\n\r\n  // Stop camera when navigating away\r\n  window.addEventListener('hashchange', () => {\r\n    if (stream) stream.getTracks().forEach(t => t.stop());\r\n  }, { once: true });\r\n\r\n  // Initialize Leaflet map\r\n  import('leaflet').then(L => {\r\n    const map = L.map('mapForm').setView([-6.2, 106.8], 10);\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; OpenStreetMap'\r\n    }).addTo(map);\r\n\r\n    const customIcon = L.icon({\r\n      iconUrl: markerIcon,\r\n      iconSize: [25, 41],\r\n      iconAnchor: [12, 41]\r\n    });\r\n\r\n    let marker = L.marker([-6.2, 106.8], {\r\n      draggable: true,\r\n      icon: customIcon\r\n    }).addTo(map);\r\n\r\n    marker.on('dragend', () => {\r\n      const pos = marker.getLatLng();\r\n      form.lat.value = pos.lat;\r\n      form.lon.value = pos.lng;\r\n    });\r\n\r\n    map.on('click', (e) => {\r\n      const { lat, lng } = e.latlng;\r\n      marker.setLatLng([lat, lng]);\r\n      form.lat.value = lat;\r\n      form.lon.value = lng;\r\n    });\r\n  });\r\n}\r\n","export async function postStory(token, formData) {\r\n  const response = await fetch('https://story-api.dicoding.dev/v1/stories', {\r\n    method: 'POST',\r\n    headers: { Authorization: 'Bearer ' + token },\r\n    body: formData,\r\n  });\r\n  const data = await response.json();\r\n  if (data.error) throw new Error(data.message);\r\n  return data;\r\n}","// src/scripts/login.js\r\n // import initPushNotification from '../push-notification-init.js'; // REMOVE\r\n\r\n export function renderLogin(container) {\r\n  // ... (keep existing HTML template) ...\r\n  const html = `\r\n    <section class=\"page login-page\">\r\n      <h2>Login</h2>\r\n      <form id=\"loginForm\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" required>\r\n\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" required>\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>Belum punya akun? <a href=\"#/register\">Daftar</a></p>\r\n    </section>\r\n  `;\r\n\r\n  container.innerHTML = html;\r\n\r\n  const form = document.getElementById('loginForm');\r\n  form.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    const email = form.email.value;\r\n    const password = form.password.value;\r\n\r\n    try {\r\n      const res = await fetch('https://story-api.dicoding.dev/v1/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n      const data = await res.json();\r\n      if (data.error) throw new Error(data.message);\r\n\r\n      localStorage.setItem('token', data.loginResult.token);\r\n      // await initPushNotification(); // REMOVE THIS LINE\r\n      // Instead, update the UI which includes push button states\r\n      if (window.appUpdateLoginStatusUI) {\r\n          window.appUpdateLoginStatusUI();\r\n      }\r\n      location.hash = '#/home'; // Navigate after successful login\r\n    } catch (err) {\r\n      alert('Login gagal: ' + err.message);\r\n    }\r\n  });\r\n}","\r\nexport function renderRegister(container) {\r\n  const html = `\r\n    <section class=\"page register-page\">\r\n      <h2>Register</h2>\r\n      <form id=\"registerForm\">\r\n        <label for=\"name\">Nama</label>\r\n        <input type=\"text\" id=\"name\" required>\r\n\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" required>\r\n        \r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" required>\r\n        \r\n        <button type=\"submit\">Daftar</button>\r\n      </form>\r\n      <p>Sudah punya akun? <a href=\"#/login\">Login</a></p>\r\n    </section>\r\n  `;\r\n\r\n  container.innerHTML = html;\r\n\r\n  const form = document.getElementById('registerForm');\r\n  form.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    const name = form.name.value;\r\n    const email = form.email.value;\r\n    const password = form.password.value;\r\n\r\n    try {\r\n      const res = await fetch('https://story-api.dicoding.dev/v1/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name, email, password })\r\n      });\r\n      const data = await res.json();\r\n      if (data.error) throw new Error(data.message);\r\n\r\n      alert('Registrasi berhasil, silakan login.');\r\n      location.hash = '#/login';\r\n    } catch (err) {\r\n      alert('Gagal registrasi: ' + err.message);\r\n    }\r\n  });\r\n}\r\n","// src/scripts/views/offline.js\r\n import { getStoriesFromIDB } from '../db.js'; // Adjust path if needed\r\n\r\n export async function renderOfflineStories(container) {\r\n   container.innerHTML = `\r\n     <section class=\"page offline-stories-page\">\r\n       <h2>Cerita Tersimpan (Offline)</h2>\r\n       <div id=\"offlineStoriesContainer\">Memuat cerita tersimpan...</div>\r\n     </section>\r\n   `;\r\n\r\n   const offlineContainer = document.getElementById('offlineStoriesContainer');\r\n   if (!offlineContainer) return;\r\n\r\n   try {\r\n     const stories = await getStoriesFromIDB();\r\n     if (stories && stories.length > 0) {\r\n       const html = stories.map(s => `\r\n         <div class=\"story\" data-id=\"${s.id}\">\r\n           <a href=\"#/story/${s.id}\" class=\"story-link\">\r\n             <img src=\"${s.photoUrl}\" alt=\"Foto oleh ${s.name || 'Unknown'}\" loading=\"lazy\" width=\"200\"\r\n                  style=\"view-transition-name: story-${s.id};\">\r\n           </a>\r\n           <h4>${s.name || 'Unknown'}</h4>\r\n           <p>${s.description || ''}</p>\r\n           <small>${s.createdAt ? new Date(s.createdAt).toLocaleString() : 'No date'}</small>\r\n           </div>\r\n       `).join('');\r\n       offlineContainer.innerHTML = html;\r\n     } else {\r\n       offlineContainer.innerHTML = '<p>Tidak ada cerita yang tersimpan di IndexedDB.</p>';\r\n     }\r\n   } catch (err) {\r\n     console.error(\"Failed to load stories from IDB:\", err);\r\n     offlineContainer.innerHTML = '<p>Gagal memuat cerita tersimpan.</p>';\r\n   }\r\n }","// src/scripts/push-subscription.js\r\n\r\nconst VAPID_PUBLIC_KEY = 'BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk';\r\n\r\nconst urlBase64ToUint8Array = (base64String) => {\r\n  // ... (keep existing implementation)\r\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n  const base64 = (base64String + padding)\r\n    .replace(/-/g, '+')\r\n    .replace(/_/g, '/');\r\n  const rawData = atob(base64);\r\n  return Uint8Array.from([...rawData].map((char) => char.charCodeAt(0)));\r\n};\r\n\r\n// --- Request Permission ---\r\nexport async function requestNotificationPermission() {\r\n    if (!('Notification' in window)) {\r\n        throw new Error('Notifications not supported by this browser.');\r\n    }\r\n\r\n    const permission = await Notification.requestPermission();\r\n    if (permission !== 'granted') {\r\n        throw new Error('Notification permission denied.');\r\n    }\r\n    return permission;\r\n}\r\n\r\n\r\n// --- Subscribe ---\r\nexport async function subscribePush(apiToken) {\r\n  if (!('serviceWorker' in navigator) || !('PushManager' in window)) {\r\n    throw new Error('Push Notifications not supported.');\r\n  }\r\n  if (!apiToken) {\r\n      throw new Error('Authentication token is required to subscribe.');\r\n  }\r\n\r\n  // Ensure permission is granted before proceeding\r\n  const permission = Notification.permission;\r\n  if (permission !== 'granted') {\r\n      throw new Error(`Notification permission is ${permission}. Please grant permission.`);\r\n  }\r\n\r\n  try {\r\n    const registration = await navigator.serviceWorker.ready;\r\n    let subscription = await registration.pushManager.getSubscription();\r\n\r\n    if (subscription) {\r\n      console.log('Already subscribed:', subscription);\r\n      // Optional: Resend to backend if needed, or just return\r\n      // await sendSubscriptionToServer(subscription, apiToken); // Uncomment if resending is desired\r\n      return subscription; // Already subscribed\r\n    }\r\n\r\n    subscription = await registration.pushManager.subscribe({\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(VAPID_PUBLIC_KEY),\r\n    });\r\n\r\n    console.log('✅ New Subscription created:', subscription);\r\n    await sendSubscriptionToServer(subscription, apiToken);\r\n    return subscription;\r\n\r\n  } catch (err) {\r\n    console.error('❌ Failed to subscribe:', err);\r\n    // Attempt to unsubscribe if subscription object exists but sending failed\r\n    if (err.name === 'AbortError' || err.message.includes('subscribe')) {\r\n        const registration = await navigator.serviceWorker.getRegistration();\r\n        const currentSubscription = await registration?.pushManager?.getSubscription();\r\n        if (currentSubscription) {\r\n           await currentSubscription.unsubscribe();\r\n           console.log(\"Cleaned up failed subscription attempt.\");\r\n        }\r\n    }\r\n    throw err; // Re-throw the error for the caller\r\n  }\r\n}\r\n\r\n// --- Unsubscribe ---\r\nexport async function unsubscribePush(apiToken) {\r\n  if (!('serviceWorker' in navigator) || !('PushManager' in window)) {\r\n    throw new Error('Push Notifications not supported.');\r\n  }\r\n   if (!apiToken) {\r\n      throw new Error('Authentication token is required to unsubscribe.');\r\n  }\r\n\r\n  try {\r\n    const registration = await navigator.serviceWorker.ready;\r\n    const subscription = await registration.pushManager.getSubscription();\r\n\r\n    if (!subscription) {\r\n      console.log('Not currently subscribed.');\r\n      return true; // Nothing to unsubscribe\r\n    }\r\n\r\n    console.log('Current subscription:', subscription);\r\n\r\n    // Send request to backend first to remove subscription there\r\n    await removeSubscriptionFromServer(subscription, apiToken);\r\n\r\n    // Then unsubscribe locally\r\n    const unsubscribed = await subscription.unsubscribe();\r\n    if (unsubscribed) {\r\n      console.log('✅ Successfully unsubscribed locally.');\r\n    } else {\r\n      console.warn('Local unsubscription call returned false.');\r\n    }\r\n    return unsubscribed;\r\n\r\n  } catch (err) {\r\n    console.error('❌ Failed to unsubscribe:', err);\r\n    // Consider if local unsubscribe should still be attempted if server call fails\r\n    throw err; // Re-throw error\r\n  }\r\n}\r\n\r\n// --- Check Subscription State ---\r\nexport async function getSubscriptionState() {\r\n    if (!('Notification' in window) || !('serviceWorker' in navigator) || !('PushManager' in window)) {\r\n        return { supported: false, permission: 'default', isSubscribed: false };\r\n    }\r\n\r\n    const permission = Notification.permission;\r\n    const registration = await navigator.serviceWorker.ready;\r\n    const subscription = await registration.pushManager.getSubscription();\r\n\r\n    return {\r\n        supported: true,\r\n        permission: permission,\r\n        isSubscribed: !!subscription, // True if subscription object exists\r\n    };\r\n}\r\n\r\n\r\n// --- Helper: Send Subscription to Server ---\r\nasync function sendSubscriptionToServer(subscription, apiToken) {\r\n  const payload = subscription.toJSON();\r\n  // Dicoding API might not support expirationTime\r\n  delete payload.expirationTime;\r\n\r\n  const response = await fetch(\r\n    'https://story-api.dicoding.dev/v1/notifications/subscribe',\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n      body: JSON.stringify(payload),\r\n    }\r\n  );\r\n\r\n  const result = await response.json();\r\n  console.log('📬 Dicoding Push API Subscribe Response:', result);\r\n\r\n  if (!response.ok) {\r\n    throw new Error(result.message || 'Subscription failed on server.');\r\n  }\r\n}\r\n\r\n// --- Helper: Remove Subscription from Server ---\r\nasync function removeSubscriptionFromServer(subscription, apiToken) {\r\n     const payload = subscription.toJSON();\r\n     // Include endpoint for identification on backend\r\n     const bodyPayload = { endpoint: payload.endpoint };\r\n\r\n     const response = await fetch(\r\n         'https://story-api.dicoding.dev/v1/notifications/unsubscribe', // Assuming this is the endpoint\r\n         {\r\n             method: 'POST', // Or DELETE, check API documentation\r\n             headers: {\r\n                 'Content-Type': 'application/json',\r\n                 Authorization: `Bearer ${apiToken}`,\r\n             },\r\n             body: JSON.stringify(bodyPayload),\r\n         }\r\n     );\r\n\r\n     const result = await response.json().catch(() => ({})); // Catch errors if response is not JSON\r\n     console.log('📬 Dicoding Push API Unsubscribe Response:', result);\r\n\r\n     if (!response.ok) {\r\n         // Don't throw an error that prevents local unsubscribe, but log it\r\n         console.error(`Server unsubscribe failed: ${response.status} - ${result.message || 'Unknown server error'}`);\r\n         // Decide if this failure should prevent local unsubscribe. Usually, it shouldn't.\r\n     }\r\n}","// src/scripts/index.js\r\nimport '../styles/style.css';\r\nimport { initRouter } from './router'; // Assuming router.js exports this\r\nimport 'leaflet/dist/leaflet.css';\r\n// Remove direct push init/subscribe calls from here\r\n// import initPushNotification from './push-notification-init.js';\r\n// import { subscribePush } from './push-subscription';\r\n\r\n// Define push-related functions or import them if needed elsewhere\r\nimport { requestNotificationPermission, subscribePush, unsubscribePush, getSubscriptionState } from './push-subscription';\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  // Do NOT automatically init or subscribe here\r\n  // initPushNotification(); // REMOVE\r\n\r\n  // Initialize SPA router\r\n  initRouter();\r\n\r\n  // Setup Navigation Drawer listeners (including new push buttons)\r\n  setupNavigationDrawer(); // New function to handle drawer logic\r\n\r\n  // Skip link accessibility\r\n  const skipLink = document.querySelector('.skip-link');\r\n  if (skipLink) { // Add null check\r\n      skipLink.addEventListener('click', (e) => {\r\n          e.preventDefault();\r\n          const main = document.getElementById('app');\r\n          if (main) {\r\n              main.setAttribute('tabindex', '-1');\r\n              main.focus();\r\n          }\r\n      });\r\n  }\r\n\r\n  // Check login status and update UI (e.g., show/hide push buttons)\r\n  updateLoginStatusUI();\r\n\r\n  // Set up view-transition for in-app navigation (if used)\r\n  // setupViewTransitionNavigation(); // Assuming this exists elsewhere or is not needed here\r\n});\r\n\r\nfunction setupNavigationDrawer() {\r\n    const drawerButton = document.getElementById('drawer-button');\r\n    const navigationDrawer = document.getElementById('navigation-drawer');\r\n    const pushSubscribeButton = document.getElementById('push-subscribe-button'); // Add this ID in index.html\r\n    const pushUnsubscribeButton = document.getElementById('push-unsubscribe-button'); // Add this ID in index.html\r\n\r\n    if (drawerButton && navigationDrawer) {\r\n        drawerButton.addEventListener('click', () => {\r\n            navigationDrawer.classList.toggle('open');\r\n        });\r\n\r\n        // Close drawer when clicking outside or on a link\r\n        document.body.addEventListener('click', (event) => {\r\n          if (!navigationDrawer.contains(event.target) && !drawerButton.contains(event.target)) {\r\n            navigationDrawer.classList.remove('open');\r\n          }\r\n        });\r\n        navigationDrawer.addEventListener('click', (event) => {\r\n           // Close drawer if a navigation link inside it is clicked\r\n           if (event.target.tagName === 'A' && event.target.getAttribute('href')?.startsWith('#')) {\r\n                navigationDrawer.classList.remove('open');\r\n           }\r\n        });\r\n    }\r\n\r\n    // --- Push Button Logic ---\r\n    if (pushSubscribeButton) {\r\n        pushSubscribeButton.addEventListener('click', async () => {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                alert('Silakan login terlebih dahulu untuk berlangganan notifikasi.');\r\n                return;\r\n            }\r\n            try {\r\n                await requestNotificationPermission(); // Ensure permission is granted\r\n                await subscribePush(token);\r\n                alert('Berhasil berlangganan notifikasi!');\r\n                updatePushSubscriptionUI(); \r\n            } catch (err) {\r\n                console.error('Gagal berlangganan notifikasi:', err);\r\n                alert(`Gagal berlangganan: ${err.message}`);\r\n            }\r\n            if (navigationDrawer) navigationDrawer.classList.remove('open');\r\n        });\r\n    }\r\n\r\n    if (pushUnsubscribeButton) {\r\n        pushUnsubscribeButton.addEventListener('click', async () => {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                alert('Silakan login terlebih dahulu.'); \r\n                return;\r\n            }\r\n            try {\r\n                await unsubscribePush(token);\r\n                alert('Berhasil berhenti berlangganan notifikasi.');\r\n                updatePushSubscriptionUI();\r\n            } catch (err) {\r\n                console.error('Gagal berhenti berlangganan:', err);\r\n                alert(`Gagal berhenti berlangganan: ${err.message}`);\r\n            }\r\n             if (navigationDrawer) navigationDrawer.classList.remove('open'); \r\n        });\r\n    }\r\n    updatePushSubscriptionUI();\r\n}\r\n\r\nasync function updatePushSubscriptionUI() {\r\n  const pushSubscribeButton = document.getElementById('push-subscribe-button');\r\n  const pushUnsubscribeButton = document.getElementById('push-unsubscribe-button');\r\n  const subscribeLi = document.getElementById('push-subscribe-li');\r\n  const unsubscribeLi = document.getElementById('push-unsubscribe-li');\r\n  const isLoggedIn = !!localStorage.getItem('token');\r\n  console.log('updatePushSubscriptionUI called. isLoggedIn:', isLoggedIn);\r\n\r\n  // --- ADD NULL CHECKS ---\r\n  if (!subscribeLi || !unsubscribeLi || !pushSubscribeButton || !pushUnsubscribeButton) {\r\n       console.warn(\"Push UI elements not found yet.\"); // Changed to warn\r\n       // Optionally, try again after a short delay if elements might render later\r\n       // setTimeout(updatePushSubscriptionUI, 100);\r\n       return; // Exit if elements aren't found\r\n  }\r\n  // ----------------------\r\n\r\n  // Reset buttons state (keep this)\r\n  pushSubscribeButton.disabled = false;\r\n  pushSubscribeButton.innerHTML = '<i class=\"fas fa-bell\"></i> Subscribe';\r\n  pushUnsubscribeButton.disabled = false;\r\n  pushUnsubscribeButton.innerHTML = '<i class=\"fas fa-bell-slash\"></i> Unsubscribe';\r\n\r\n\r\n  if (!isLoggedIn || !('Notification' in window) || !('serviceWorker' in navigator) || !('PushManager'in window)) {\r\n      console.log('Hiding push buttons (not supported or not logged in).');\r\n      subscribeLi.style.display = 'none';\r\n      unsubscribeLi.style.display = 'none';\r\n      return;\r\n  }\r\n\r\n  try {\r\n      const state = await getSubscriptionState();\r\n      console.log(\"Push subscription state:\", state);\r\n       if (state.isSubscribed) {\r\n           console.log('Showing Unsubscribe button.');\r\n           subscribeLi.style.display = 'none';\r\n           unsubscribeLi.style.display = 'list-item'; // Use list-item\r\n       } else if (state.permission === 'granted') {\r\n           console.log('Showing Subscribe button.');\r\n           subscribeLi.style.display = 'list-item';\r\n           unsubscribeLi.style.display = 'none';\r\n       } else { // denied or default\r\n           console.log('Showing Subscribe button (permission not granted/default).');\r\n           subscribeLi.style.display = 'list-item';\r\n           unsubscribeLi.style.display = 'none';\r\n           if (state.permission === 'denied') {\r\n              pushSubscribeButton.disabled = true;\r\n              pushSubscribeButton.textContent = 'Permission Denied';\r\n           }\r\n       }\r\n  } catch (error) {\r\n     console.error(\"Error updating push UI:\", error);\r\n     // Fallback: Hide both on error? Or show subscribe disabled?\r\n     subscribeLi.style.display = 'none';\r\n     unsubscribeLi.style.display = 'none';\r\n  }\r\n}\r\nfunction updateLoginStatusUI() {\r\n  updatePushSubscriptionUI();\r\n\r\n}\r\n\r\nwindow.appUpdateLoginStatusUI = updateLoginStatusUI;\r\n\r\n","// src/scripts/db.js\r\nimport { openDB } from 'idb';\r\n\r\nconst DB_NAME = 'story-app';\r\nconst DB_VERSION = 1;\r\nconst STORE_STORIES = 'stories';\r\nconst STORE_OUTBOX = 'outbox';\r\n\r\nconst dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n  upgrade(db) {\r\n    if (!db.objectStoreNames.contains(STORE_STORIES)) {\r\n      db.createObjectStore(STORE_STORIES, { keyPath: 'id' });\r\n    }\r\n    if (!db.objectStoreNames.contains(STORE_OUTBOX)) {\r\n      db.createObjectStore(STORE_OUTBOX, { autoIncrement: true });\r\n    }\r\n  },\r\n});\r\n\r\nexport async function saveStoriesToIDB(stories) {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction(STORE_STORIES, 'readwrite');\r\n  for (const s of stories) {\r\n    if (s.id) {\r\n      tx.store.put(s);\r\n    } else {\r\n      console.warn('Story without id skipped:', s);\r\n    }\r\n  }\r\n  await tx.done;\r\n}\r\n\r\nexport async function getStoriesFromIDB() {\r\n  const db = await dbPromise;\r\n  return db.getAll(STORE_STORIES);\r\n}\r\n\r\nexport async function saveOutboxItem(item) {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction(STORE_OUTBOX, 'readwrite');\r\n\r\n  // --- Store components, not the FormData object ---\r\n  const { token, formData } = item;\r\n  const description = formData.get('description');\r\n  const photoBlob = formData.get('photo'); // Assuming 'photo' holds the Blob\r\n  const lat = formData.get('lat');\r\n  const lon = formData.get('lon');\r\n  const photoFileName = photoBlob instanceof File ? photoBlob.name : 'photo.jpg'; // Get filename if available\r\n\r\n  const itemToStore = {\r\n    token: token,\r\n    description: description,\r\n    photoBlob: photoBlob, // Store the actual Blob\r\n    photoFileName: photoFileName, // Store the filename\r\n    lat: lat || null, // Store null if not present\r\n    lon: lon || null, // Store null if not present\r\n    timestamp: new Date().toISOString() // Optional: add a timestamp\r\n  };\r\n  // ------------------------------------------------\r\n\r\n  console.log(\"Storing in outbox:\", itemToStore); // Log what's being stored\r\n  await tx.store.add(itemToStore); // Use await here\r\n  await tx.done;\r\n  console.log(\"Item added to outbox store.\");\r\n}\r\n\r\nexport async function getOutboxItems() {\r\n  const db = await dbPromise;\r\n  return db.getAll(STORE_OUTBOX);\r\n}\r\n\r\nexport async function clearOutbox() {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction(STORE_OUTBOX, 'readwrite');\r\n  tx.store.clear();\r\n  await tx.done;\r\n}\r\n\r\n// ← NEW: Delete one story by its id from the 'stories' store\r\nexport async function deleteStoryFromIDB(id) {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction(STORE_STORIES, 'readwrite');\r\n  tx.store.delete(id);\r\n  await tx.done;\r\n}\r\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","async","renderHome","container","token","localStorage","getItem","location","hash","innerHTML","logoutBtn","document","getElementById","addEventListener","removeItem","window","appUpdateLoginStatusUI","stories","mapInstance","console","log","response","fetch","headers","Authorization","data","json","error","Error","message","listStory","fetchStories","length","saveStoriesToIDB","err","warn","getStoriesFromIDB","idbError","html","map","s","photoUrl","name","description","createdAt","Date","toLocaleString","join","renderStoriesList","L","setView","attribution","tileSize","zoomOffset","addTo","initMap","forEach","lat","lon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","bindPopup","addMarker","mapError","renderStoryDetail","then","res","ok","story","catch","routes","stream","imageBlob","video","canvas","captureBtn","altFile","photoMethod","cameraSection","context","getContext","form","useCam","value","style","display","navigator","mediaDevices","getUserMedia","camStream","srcObject","getTracks","t","stop","drawImage","width","height","toBlob","blob","alert","e","preventDefault","desc","trim","formData","FormData","append","files","method","body","postStory","saveOutboxItem","reg","serviceWorker","ready","sync","register","syncErr","once","tileLayer","customIcon","markerIcon","marker","draggable","on","pos","getLatLng","lng","latlng","setLatLng","email","password","JSON","stringify","setItem","loginResult","offlineContainer","loadPage","app","routePath","replace","startsWith","storyMatch","match","storyId","renderDetailFunc","startViewTransition","render","doRender","urlBase64ToUint8Array","base64String","base64","repeat","rawData","atob","Uint8Array","from","char","charCodeAt","updatePushSubscriptionUI","pushSubscribeButton","pushUnsubscribeButton","subscribeLi","unsubscribeLi","isLoggedIn","disabled","state","supported","permission","isSubscribed","Notification","registration","pushManager","getSubscription","getSubscriptionState","textContent","updateLoginStatusUI","removeEventListener","drawerButton","navigationDrawer","classList","toggle","event","contains","target","remove","tagName","getAttribute","requestPermission","requestNotificationPermission","apiToken","subscription","subscribe","userVisibleOnly","applicationServerKey","payload","toJSON","expirationTime","result","sendSubscriptionToServer","includes","getRegistration","currentSubscription","unsubscribe","subscribePush","bodyPayload","endpoint","status","removeSubscriptionFromServer","unsubscribed","unsubscribePush","setupNavigationDrawer","skipLink","querySelector","main","setAttribute","focus","STORE_STORIES","STORE_OUTBOX","dbPromise","openDB","upgrade","db","objectStoreNames","createObjectStore","keyPath","autoIncrement","tx","transaction","store","put","done","getAll","item","get","photoBlob","itemToStore","photoFileName","File","timestamp","toISOString","add"],"sourceRoot":""}