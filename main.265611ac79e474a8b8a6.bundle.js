"use strict";(self.webpackChunkapp_starter_project_with_webpack=self.webpackChunkapp_starter_project_with_webpack||[]).push([[792],{276:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(354),a=n.n(o),i=n(314),r=n.n(i)()(a());r.push([e.id,"// extracted by mini-css-extract-plugin\nexport {};","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;QACQ,CAAA",sourcesContent:["// extracted by mini-css-extract-plugin\nexport {};"],sourceRoot:""}]);const s=r},382:(e,t,n)=>{var o=n(72),a=n.n(o),i=n(825),r=n.n(i),s=n(659),l=n.n(s),c=n(56),d=n.n(c),u=n(540),p=n.n(u),g=n(113),m=n.n(g),h=n(276),b={};b.styleTagTransform=m(),b.setAttributes=d(),b.insert=l().bind(null,"head"),b.domAPI=r(),b.insertStyleElement=p(),a()(h.A,b),h.A&&h.A.locals&&h.A.locals;var y=n(481),w=n.n(y);n(303);var f=n(602);const v="stories",k="outbox",S=(0,f.P2)("story-app",1,{upgrade(e){e.objectStoreNames.contains(v)||e.createObjectStore(v,{keyPath:"id"}),e.objectStoreNames.contains(k)||e.createObjectStore(k,{autoIncrement:!0})}});async function L(e){const t=localStorage.getItem("token");if(!t)return void(location.hash="#/login");e.innerHTML='\n    <section class="page home-page">\n      <a id="mainContent" tabindex="-1"></a>\n      <h2>Semua Cerita</h2>\n      <button id="logoutBtn">Logout</button> <div id="storiesContainer">Memuat cerita…</div>\n      <div style="width:100%;">\n        <div id="map" class="map-fullwidth"></div>\n      </div>\n    </section>\n  ';const n=document.getElementById("logoutBtn");n&&n.addEventListener("click",(()=>{localStorage.removeItem("token"),window.appUpdateLoginStatusUI&&window.appUpdateLoginStatusUI(),location.hash="#/login"}));let o=[],a=null;try{console.log("Fetching stories from network..."),o=await async function(e){const t=await fetch("https://story-api.dicoding.dev/v1/stories?location=1",{headers:{Authorization:"Bearer "+e}}),n=await t.json();if(n.error)throw new Error(n.message);return n.listStory||[]}(t),console.log(`Fetched ${o.length} stories. Saving to IDB...`),await async function(e){const t=(await S).transaction(v,"readwrite");for(const n of e)n.id?t.store.put(n):console.warn("Story without id skipped:",n);await t.done}(o),console.log("Stories saved to IDB.")}catch(e){console.warn("Fetch failed, falling back to IDB:",e);try{o=await async function(){return(await S).getAll(v)}(),console.log(`Loaded ${o.length} stories from IDB.`),0===o.length&&(document.getElementById("storiesContainer").innerHTML="<p>Gagal memuat cerita. Coba lagi saat online atau lihat cerita offline jika tersedia.</p>")}catch(e){console.error("Failed to load stories from IDB:",e),document.getElementById("storiesContainer").innerHTML="<p>Gagal memuat cerita dari sumber manapun.</p>",o=[]}}!function(e){const t=document.getElementById("storiesContainer");if(!t)return;if(!e||0===e.length)return void(t.innerHTML="Tidak ada cerita untuk ditampilkan.");const n=e.map((e=>`\n    <div class="story" data-id="${e.id}">\n      <a href="#/story/${e.id}" class="story-link">\n        <img src="${e.photoUrl}" alt="Foto oleh ${e.name||"Unknown"}" loading="lazy" width="200"\n             style="view-transition-name: story-${e.id};">\n      </a>\n      <h4>${e.name||"Unknown"}</h4>\n      <p>${e.description||""}</p>\n      <small>${e.createdAt?new Date(e.createdAt).toLocaleString():"No date"}</small>\n      </div>\n  `)).join("");t.innerHTML=n}(o);try{a=function(){const e=w().map("map").setView([-2.5489,118.0149],5);return w().tileLayer("https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?key=EjgIQQJl93uRBUQIPRGe",{attribution:'&copy; <a href="https://www.maptiler.com">MapTiler</a> &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',tileSize:512,zoomOffset:-1}).addTo(e),e}(),o.forEach((e=>{e.lat&&e.lon&&function(e,t,n,o){if(!e||!t||!n)return;const a=w().icon({iconUrl:"https://unpkg.com/leaflet@1.9.3/dist/images/marker-icon.png",iconSize:[25,41],iconAnchor:[12,41],popupAnchor:[1,-34]});w().marker([t,n],{icon:a}).addTo(e).bindPopup(o||"No description")}(a,e.lat,e.lon,`${e.name||"Unknown"}: ${e.description||""}`)}))}catch(e){console.error("Failed to initialize map or add markers:",e)}}var E=n(927);const I={"/":L,"/home":L,"/about":function(e){e.innerHTML='\n    <section class="page about-page">\n      <h2>Tentang Aplikasi</h2>\n      <p>Aplikasi ini dibuat untuk menampilkan cerita dari pengguna dengan lokasi di peta menggunakan Leaflet dan MapTiler.</p>\n    </section>\n  '},"/add":async function(e){const t=localStorage.getItem("token");if(!t)return void(location.hash="#/login");let o=null,a=null;e.innerHTML='\n    <section class="page add-page">\n      <h2>Tambah Cerita</h2>\n      <form id="storyForm">\n        <label for="description">Deskripsi</label>\n        <input type="text" id="description" required />\n\n        <label for="photoMethod">Foto</label>\n        <select id="photoMethod">\n          <option value="file">Upload File</option>\n          <option value="camera">Gunakan Kamera</option>\n        </select>\n\n        <div id="cameraSection" style="display: none;">\n          <video id="video" width="320" height="240" autoplay></video>\n          <button type="button" id="capture">Ambil Foto</button>\n          <canvas id="canvas" width="320" height="240" style="display: none;"></canvas>\n        </div>\n\n        <input type="file" id="altPhoto" accept="image/*" />\n\n        <label for="lat">Latitude</label>\n        <input type="text" id="lat" />\n\n        <label for="lon">Longitude</label>\n        <input type="text" id="lon" />\n\n        <div id="mapForm" class="map-fullwidth" style="margin-bottom: 1rem;"></div>\n\n        <button type="submit">Kirim Cerita</button>\n      </form>\n    </section>\n  ';const i=document.getElementById("video"),r=document.getElementById("canvas"),s=document.getElementById("capture"),l=document.getElementById("altPhoto"),c=document.getElementById("photoMethod"),d=document.getElementById("cameraSection"),u=r.getContext("2d"),p=document.getElementById("storyForm");c.addEventListener("change",(()=>{const e="camera"===c.value;d.style.display=e?"block":"none",l.style.display=e?"none":"block",e?navigator.mediaDevices.getUserMedia({video:!0}).then((e=>{o=e,i.srcObject=o})):o&&o.getTracks().forEach((e=>e.stop()))})),s.addEventListener("click",(()=>{u.drawImage(i,0,0,r.width,r.height),r.toBlob((e=>{a=e,alert("Foto berhasil diambil!")}),"image/jpeg")})),p.addEventListener("submit",(async e=>{e.preventDefault();const n=p.description.value.trim(),o=p.lat.value.trim(),i=p.lon.value.trim(),r=new FormData;if(r.append("description",n),"camera"===c.value){if(!a)return void alert("Harap ambil foto terlebih dahulu.");r.append("photo",a,"photo.jpg")}else{if(0===l.files.length)return void alert("Pilih file terlebih dahulu.");r.append("photo",l.files[0])}o&&r.append("lat",o),i&&r.append("lon",i);try{await async function(e,t){const n=await fetch("https://story-api.dicoding.dev/v1/stories",{method:"POST",headers:{Authorization:"Bearer "+e},body:t}),o=await n.json();if(o.error)throw new Error(o.message);return o}(t,r),alert("Cerita berhasil ditambahkan (online)."),location.hash="#/"}catch(e){if(console.warn("Offline: simpan cerita ke outbox…"),await async function(e){const t=(await S).transaction(k,"readwrite"),{token:n,formData:o}=e,a=o.get("description"),i=o.get("photo"),r=o.get("lat"),s=o.get("lon"),l={token:n,description:a,photoBlob:i,photoFileName:i instanceof File?i.name:"photo.jpg",lat:r||null,lon:s||null,timestamp:(new Date).toISOString()};console.log("Storing in outbox:",l),await t.store.add(l),await t.done,console.log("Item added to outbox store.")}({token:t,formData:r}),"serviceWorker"in navigator&&"SyncManager"in window){const e=await navigator.serviceWorker.ready;try{await e.sync.register("outbox-sync"),console.log("Background sync terdaftar: outbox-sync")}catch(e){console.error("Gagal register sync:",e)}}alert("Offline. Cerita akan dikirim saat online kembali."),location.hash="#/"}})),window.addEventListener("hashchange",(()=>{o&&o.getTracks().forEach((e=>e.stop()))}),{once:!0}),Promise.resolve().then(n.t.bind(n,481,23)).then((e=>{const t=e.map("mapForm").setView([-6.2,106.8],10);e.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenStreetMap"}).addTo(t);const n=e.icon({iconUrl:E,iconSize:[25,41],iconAnchor:[12,41]});let o=e.marker([-6.2,106.8],{draggable:!0,icon:n}).addTo(t);o.on("dragend",(()=>{const e=o.getLatLng();p.lat.value=e.lat,p.lon.value=e.lng})),t.on("click",(e=>{const{lat:t,lng:n}=e.latlng;o.setLatLng([t,n]),p.lat.value=t,p.lon.value=n}))}))},"/login":function(e){e.innerHTML='\n    <section class="page login-page">\n      <h2>Login</h2>\n      <form id="loginForm">\n        <label for="email">Email</label>\n        <input type="email" id="email" required>\n\n        <label for="password">Password</label>\n        <input type="password" id="password" required>\n\n        <button type="submit">Login</button>\n      </form>\n      <p>Belum punya akun? <a href="#/register">Daftar</a></p>\n    </section>\n  ';const t=document.getElementById("loginForm");t.addEventListener("submit",(async e=>{e.preventDefault();const n=t.email.value,o=t.password.value;try{const e=await fetch("https://story-api.dicoding.dev/v1/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:n,password:o})}),t=await e.json();if(t.error)throw new Error(t.message);localStorage.setItem("token",t.loginResult.token),window.appUpdateLoginStatusUI&&window.appUpdateLoginStatusUI(),location.hash="#/home"}catch(e){alert("Login gagal: "+e.message)}}))},"/register":function(e){e.innerHTML='\n    <section class="page register-page">\n      <h2>Register</h2>\n      <form id="registerForm">\n        <label for="name">Nama</label>\n        <input type="text" id="name" required>\n\n        <label for="email">Email</label>\n        <input type="email" id="email" required>\n        \n        <label for="password">Password</label>\n        <input type="password" id="password" required>\n        \n        <button type="submit">Daftar</button>\n      </form>\n      <p>Sudah punya akun? <a href="#/login">Login</a></p>\n    </section>\n  ';const t=document.getElementById("registerForm");t.addEventListener("submit",(async e=>{e.preventDefault();const n=t.name.value,o=t.email.value,a=t.password.value;try{const e=await fetch("https://story-api.dicoding.dev/v1/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:n,email:o,password:a})}),t=await e.json();if(t.error)throw new Error(t.message);alert("Registrasi berhasil, silakan login."),location.hash="#/login"}catch(e){alert("Gagal registrasi: "+e.message)}}))}};function B(){const e=document.getElementById("app");e.setAttribute("view-transition-name","page-content");let t=(location.hash||"#/").slice(1);""===t&&(t="/");const n=t.match(/^\/?story\/(.+)/);if(n){const t=n[1],o=()=>function(e,t){console.log("Loaded story detail for ID:",t);const n=localStorage.getItem("token");n?(e.innerHTML="<p>Loading...</p>",fetch(`https://story-api.dicoding.dev/v1/stories/${t}`,{headers:{Authorization:"Bearer "+n}}).then((e=>{if(!e.ok)throw new Error("Gagal mengambil data");return e.json()})).then((t=>{const n=t.story;e.innerHTML=`\n        <section class="page story-detail">\n          <h2>${n.name}</h2>\n          <img src="${n.photoUrl}" alt="Foto oleh ${n.name}" class="story-image" style="max-width: 500px; width: 100%; display: block; border-radius: 12px; margin: 20px auto;">\n          <p style="margin-top: 20px;">${n.description}</p>\n          <small>Dibuat pada: ${new Date(n.createdAt).toLocaleString()}</small>\n          <br><br>\n          <a href="#/">← Kembali ke Beranda</a>\n        </section>\n      `})).catch((t=>{console.error("Gagal memuat cerita:",t),e.innerHTML="<p>Gagal memuat cerita. Silakan coba lagi.</p>"}))):location.hash="#/login"}(e,t);return void(document.startViewTransition?document.startViewTransition(o):o())}const o=I[t]||I[`/${t}`];if(!o)return void(e.innerHTML="<p>Halaman tidak ditemukan</p>");const a=()=>o(e);document.startViewTransition?document.startViewTransition(a):a()}const A=e=>{const t=(e+"=".repeat((4-e.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),n=atob(t);return Uint8Array.from([...n].map((e=>e.charCodeAt(0))))};async function T(){const e=document.getElementById("push-subscribe-button"),t=document.getElementById("push-unsubscribe-button"),n=document.getElementById("push-subscribe-li"),o=document.getElementById("push-unsubscribe-li"),a=!!localStorage.getItem("token");if(console.log("updatePushSubscriptionUI called. isLoggedIn:",a),n&&o&&e&&t){if(e.disabled=!1,e.innerHTML='<i class="fas fa-bell"></i> Subscribe',t.disabled=!1,t.innerHTML='<i class="fas fa-bell-slash"></i> Unsubscribe',!(a&&"Notification"in window&&"serviceWorker"in navigator&&"PushManager"in window))return console.log("Hiding push buttons (not supported or not logged in)."),n.style.display="none",void(o.style.display="none");try{const t=await async function(){if(!("Notification"in window)||!("serviceWorker"in navigator)||!("PushManager"in window))return{supported:!1,permission:"default",isSubscribed:!1};const e=Notification.permission,t=await navigator.serviceWorker.ready;return{supported:!0,permission:e,isSubscribed:!!await t.pushManager.getSubscription()}}();console.log("Push subscription state:",t),t.isSubscribed?(console.log("Showing Unsubscribe button."),n.style.display="none",o.style.display="list-item"):"granted"===t.permission?(console.log("Showing Subscribe button."),n.style.display="list-item",o.style.display="none"):(console.log("Showing Subscribe button (permission not granted/default)."),n.style.display="list-item",o.style.display="none","denied"===t.permission&&(e.disabled=!0,e.textContent="Permission Denied"))}catch(e){console.error("Error updating push UI:",e),n.style.display="none",o.style.display="none"}}else console.warn("Push UI elements not found yet.")}function M(){T()}document.addEventListener("DOMContentLoaded",(async()=>{window.addEventListener("hashchange",B),window.addEventListener("load",B),function(){const e=document.getElementById("drawer-button"),t=document.getElementById("navigation-drawer"),n=document.getElementById("push-subscribe-button"),o=document.getElementById("push-unsubscribe-button");e&&t&&(e.addEventListener("click",(()=>{t.classList.toggle("open")})),document.body.addEventListener("click",(n=>{t.contains(n.target)||e.contains(n.target)||t.classList.remove("open")})),t.addEventListener("click",(e=>{"A"===e.target.tagName&&e.target.getAttribute("href")?.startsWith("#")&&t.classList.remove("open")}))),n&&n.addEventListener("click",(async()=>{const e=localStorage.getItem("token");if(e){try{await async function(){if(!("Notification"in window))throw new Error("Notifications not supported by this browser.");const e=await Notification.requestPermission();if("granted"!==e)throw new Error("Notification permission denied.");return e}(),await async function(e){if(!("serviceWorker"in navigator)||!("PushManager"in window))throw new Error("Push Notifications not supported.");if(!e)throw new Error("Authentication token is required to subscribe.");const t=Notification.permission;if("granted"!==t)throw new Error(`Notification permission is ${t}. Please grant permission.`);try{const t=await navigator.serviceWorker.ready;let n=await t.pushManager.getSubscription();return n?(console.log("Already subscribed:",n),n):(n=await t.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:A("BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk")}),console.log("✅ New Subscription created:",n),await async function(e,t){const n=e.toJSON();delete n.expirationTime;const o=await fetch("https://story-api.dicoding.dev/v1/notifications/subscribe",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(n)}),a=await o.json();if(console.log("📬 Dicoding Push API Subscribe Response:",a),!o.ok)throw new Error(a.message||"Subscription failed on server.")}(n,e),n)}catch(e){if(console.error("❌ Failed to subscribe:",e),"AbortError"===e.name||e.message.includes("subscribe")){const e=await navigator.serviceWorker.getRegistration(),t=await(e?.pushManager?.getSubscription());t&&(await t.unsubscribe(),console.log("Cleaned up failed subscription attempt."))}throw e}}(e),alert("Berhasil berlangganan notifikasi!"),T()}catch(e){console.error("Gagal berlangganan notifikasi:",e),alert(`Gagal berlangganan: ${e.message}`)}t&&t.classList.remove("open")}else alert("Silakan login terlebih dahulu untuk berlangganan notifikasi.")})),o&&o.addEventListener("click",(async()=>{const e=localStorage.getItem("token");if(e){try{await async function(e){if(!("serviceWorker"in navigator)||!("PushManager"in window))throw new Error("Push Notifications not supported.");if(!e)throw new Error("Authentication token is required to unsubscribe.");try{const t=await navigator.serviceWorker.ready,n=await t.pushManager.getSubscription();if(!n)return console.log("Not currently subscribed."),!0;console.log("Current subscription:",n),await async function(e,t){const n={endpoint:e.toJSON().endpoint},o=await fetch("https://story-api.dicoding.dev/v1/notifications/unsubscribe",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(n)}),a=await o.json().catch((()=>({})));console.log("📬 Dicoding Push API Unsubscribe Response:",a),o.ok||console.error(`Server unsubscribe failed: ${o.status} - ${a.message||"Unknown server error"}`)}(n,e);const o=await n.unsubscribe();return o?console.log("✅ Successfully unsubscribed locally."):console.warn("Local unsubscription call returned false."),o}catch(e){throw console.error("❌ Failed to unsubscribe:",e),e}}(e),alert("Berhasil berhenti berlangganan notifikasi."),T()}catch(e){console.error("Gagal berhenti berlangganan:",e),alert(`Gagal berhenti berlangganan: ${e.message}`)}t&&t.classList.remove("open")}else alert("Silakan login terlebih dahulu.")})),T()}();const e=document.querySelector(".skip-link");e&&e.addEventListener("click",(e=>{e.preventDefault();const t=document.getElementById("app");t&&(t.setAttribute("tabindex","-1"),t.focus())})),M()})),window.appUpdateLoginStatusUI=M}},e=>{e.O(0,[438],(()=>e(e.s=382))),e.O()}]);
//# sourceMappingURL=main.265611ac79e474a8b8a6.bundle.js.map