(()=>{importScripts("https://storage.googleapis.com/workbox-cdn/releases/7.1.0/workbox-sw.js");try{importScripts("./db.bundle.js")}catch(e){console.error("[SW Template] Failed to import DB functions. Background Sync might fail.",e),self.getOutboxItems=async()=>(console.warn("getOutboxItems not available"),[]),self.clearOutbox=async()=>{console.warn("clearOutbox not available")}}if(workbox){workbox.precaching.precacheAndRoute([{'revision':null,'url':'/StoryApplicationDicoding/438.b68bcade2cc8a234d2a9.bundle.js'},{'revision':'a09afd57099dc21e9263ff61a08dff24','url':'/StoryApplicationDicoding/438.b68bcade2cc8a234d2a9.bundle.js.LICENSE.txt'},{'revision':'21a0a0a9b1fdb78eae4c9d97f7e90078','url':'/StoryApplicationDicoding/favicon.png'},{'revision':null,'url':'/StoryApplicationDicoding/favicon.png'},{'revision':'fc206a66d24fe8cc7b1376930538b2c0','url':'/StoryApplicationDicoding/images/icon-192.png'},{'revision':'6bb68d9ad73a48b80addf41f11c0cb5d','url':'/StoryApplicationDicoding/images/icon-512.png'},{'revision':'4f0283c6ce28e888000e978e537a6a56','url':'/StoryApplicationDicoding/images/layers-2x.png'},{'revision':'a6137456ed160d7606981aa57c559898','url':'/StoryApplicationDicoding/images/layers.png'},{'revision':'ac73f380ba0147f4fa5951dfaba2a665','url':'/StoryApplicationDicoding/images/logo.png'},{'revision':'2273e3d8ad9264b7daa5bdbf8e6b47f8','url':'/StoryApplicationDicoding/images/marker-icon.png'},{'revision':'ac028b8374905adbd4f19064624eab91','url':'/StoryApplicationDicoding/index.html'},{'revision':null,'url':'/StoryApplicationDicoding/index.html'},{'revision':null,'url':'/StoryApplicationDicoding/main.6d3c973d2bdeedfc61a4.css'},{'revision':null,'url':'/StoryApplicationDicoding/main.f9d2fbfe646068025c2c.bundle.js'},{'revision':'35ea879e36da92d5b088ac1c5f972797','url':'/StoryApplicationDicoding/offline.html'},{'revision':null,'url':'/StoryApplicationDicoding/offline.html'},{'revision':null,'url':'/StoryApplicationDicoding/runtime.e80072061d9b4fcffc0b.bundle.js'}]);const{registerRoute:e,setCatchHandler:o}=workbox.routing,{NetworkFirst:t,StaleWhileRevalidate:a,CacheFirst:n}=workbox.strategies,{CacheableResponsePlugin:r}=workbox.cacheableResponse,{ExpirationPlugin:s}=workbox.expiration,{precacheAndRoute:l,getCacheKeyForURL:c}=workbox.precaching;e(),e(),e();const i="/StoryApplicationDicoding/offline.html";o((({event:e})=>"navigate"===e.request.mode?(console.log(`[SW] Attempting offline fallback for navigation. Trying to match cache key for: ${i}`),caches.match(c(i)).then((e=>e?(console.log(`[SW] Serving offline fallback: ${i}`),e):(console.error(`[SW] CRITICAL: Offline fallback page ('${i}') not found in cache!`),new Response("Network error: You are offline and the fallback page is not available.",{status:503,statusText:"Service Unavailable",headers:{"Content-Type":"text/plain"}})))).catch((e=>(console.error("[SW] Error during caches.match for offline fallback:",e),new Response("Offline error occurred.",{status:500,headers:{"Content-Type":"text/plain"}}))))):Response.error()))}else console.error("Workbox library not loaded.");self.addEventListener("sync",(e=>{})),self.addEventListener("push",(e=>{})),self.addEventListener("notificationclick",(e=>{})),self.addEventListener("install",(()=>{})),self.addEventListener("activate",(e=>{}))})();
//# sourceMappingURL=service-worker.js.map