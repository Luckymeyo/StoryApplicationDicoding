{"version":3,"file":"main.f9d2fbfe646068025c2c.bundle.js","mappings":"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","sources":["webpack://app-starter-project-with-webpack/./src/styles/style.css?ecaf","webpack://app-starter-project-with-webpack/./src/scripts/db.js","webpack://app-starter-project-with-webpack/./src/scripts/views/home.js","webpack://app-starter-project-with-webpack/./src/scripts/presenters/homePresenter.js","webpack://app-starter-project-with-webpack/./src/scripts/map.js","webpack://app-starter-project-with-webpack/./src/scripts/views/story-detail.js","webpack://app-starter-project-with-webpack/./src/scripts/router.js","webpack://app-starter-project-with-webpack/./src/scripts/views/about.js","webpack://app-starter-project-with-webpack/./src/scripts/views/add.js","webpack://app-starter-project-with-webpack/./src/scripts/presenters/addPresenter.js","webpack://app-starter-project-with-webpack/./src/scripts/views/login.js","webpack://app-starter-project-with-webpack/./src/scripts/views/register.js","webpack://app-starter-project-with-webpack/./src/scripts/views/offline.js","webpack://app-starter-project-with-webpack/./src/scripts/push-subscription.js","webpack://app-starter-project-with-webpack/./src/scripts/index.js","webpack://app-starter-project-with-webpack/./src/styles/style.css?e274"],"sourcesContent":["\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","// src/scripts/db.js\r\nimport { openDB } from 'idb';\r\n\r\nconst DB_NAME = 'story-app';\r\nconst DB_VERSION = 1;\r\nconst STORE_STORIES = 'stories';\r\nconst STORE_OUTBOX = 'outbox';\r\n\r\nconst dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n  upgrade(db) {\r\n    if (!db.objectStoreNames.contains(STORE_STORIES)) {\r\n      db.createObjectStore(STORE_STORIES, { keyPath: 'id' });\r\n    }\r\n    if (!db.objectStoreNames.contains(STORE_OUTBOX)) {\r\n      db.createObjectStore(STORE_OUTBOX, { autoIncrement: true });\r\n    }\r\n  },\r\n});\r\n\r\nexport async function saveStoriesToIDB(stories) {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction(STORE_STORIES, 'readwrite');\r\n  for (const s of stories) {\r\n    if (s.id) {\r\n      tx.store.put(s);\r\n    } else {\r\n      console.warn('Story without id skipped:', s);\r\n    }\r\n  }\r\n  await tx.done;\r\n}\r\n\r\nexport async function getStoriesFromIDB() {\r\n  const db = await dbPromise;\r\n  return db.getAll(STORE_STORIES);\r\n}\r\n\r\nexport async function saveOutboxItem(item) {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction(STORE_OUTBOX, 'readwrite');\r\n\r\n  // --- Store components, not the FormData object ---\r\n  const { token, formData } = item;\r\n  const description = formData.get('description');\r\n  const photoBlob = formData.get('photo'); // Assuming 'photo' holds the Blob\r\n  const lat = formData.get('lat');\r\n  const lon = formData.get('lon');\r\n  const photoFileName = photoBlob instanceof File ? photoBlob.name : 'photo.jpg'; // Get filename if available\r\n\r\n  const itemToStore = {\r\n    token: token,\r\n    description: description,\r\n    photoBlob: photoBlob, // Store the actual Blob\r\n    photoFileName: photoFileName, // Store the filename\r\n    lat: lat || null, // Store null if not present\r\n    lon: lon || null, // Store null if not present\r\n    timestamp: new Date().toISOString() // Optional: add a timestamp\r\n  };\r\n  // ------------------------------------------------\r\n\r\n  console.log(\"Storing in outbox:\", itemToStore); // Log what's being stored\r\n  await tx.store.add(itemToStore); // Use await here\r\n  await tx.done;\r\n  console.log(\"Item added to outbox store.\");\r\n}\r\n\r\nexport async function getOutboxItems() {\r\n  const db = await dbPromise;\r\n  return db.getAll(STORE_OUTBOX);\r\n}\r\n\r\nexport async function clearOutbox() {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction(STORE_OUTBOX, 'readwrite');\r\n  tx.store.clear();\r\n  await tx.done;\r\n}\r\n\r\n// ← NEW: Delete one story by its id from the 'stories' store\r\nexport async function deleteStoryFromIDB(id) {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction(STORE_STORIES, 'readwrite');\r\n  tx.store.delete(id);\r\n  await tx.done;\r\n}\r\n","// src/scripts/home.js\r\nimport { initMap, addMarker } from '../map'; // Assuming ../map is correct path\r\nimport { fetchStories } from '../presenters/homePresenter';\r\nimport { saveStoriesToIDB, getStoriesFromIDB } from '../db.js';\r\n// Remove deleteStoryFromIDB import:\r\n// import { deleteStoryFromIDB } from '../db.js';\r\n\r\nexport async function renderHome(container) {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    location.hash = '#/login';\r\n    return;\r\n  }\r\n\r\n  container.innerHTML = `\r\n    <section class=\"page home-page\">\r\n      <a id=\"mainContent\" tabindex=\"-1\"></a>\r\n      <h2>Semua Cerita</h2>\r\n      <button id=\"logoutBtn\">Logout</button> <div id=\"storiesContainer\">Memuat cerita…</div>\r\n      <div style=\"width:100%;\">\r\n        <div id=\"map\" class=\"map-fullwidth\"></div>\r\n      </div>\r\n    </section>\r\n  `;\r\n\r\n  // --- Logout Button ---\r\n  const logoutBtn = document.getElementById('logoutBtn');\r\n  if(logoutBtn) {\r\n      logoutBtn.addEventListener('click', () => {\r\n          localStorage.removeItem('token');\r\n          // Update UI after logout\r\n           if (window.appUpdateLoginStatusUI) {\r\n              window.appUpdateLoginStatusUI();\r\n          }\r\n          location.hash = '#/login';\r\n      });\r\n  }\r\n\r\n\r\n  // --- Load and Render Stories ---\r\n  let stories = [];\r\n  let mapInstance = null; // Hold map instance\r\n\r\n  try {\r\n    console.log(\"Fetching stories from network...\");\r\n    stories = await fetchStories(token);\r\n    console.log(`Fetched ${stories.length} stories. Saving to IDB...`);\r\n    await saveStoriesToIDB(stories);\r\n    console.log(\"Stories saved to IDB.\");\r\n  } catch (err) {\r\n    console.warn('Fetch failed, falling back to IDB:', err);\r\n    try {\r\n        stories = await getStoriesFromIDB();\r\n        console.log(`Loaded ${stories.length} stories from IDB.`);\r\n        if (stories.length === 0) {\r\n            // Optional: Show a specific message if offline and IDB is empty\r\n             document.getElementById('storiesContainer').innerHTML = '<p>Gagal memuat cerita. Coba lagi saat online atau lihat cerita offline jika tersedia.</p>';\r\n        }\r\n    } catch (idbError) {\r\n       console.error(\"Failed to load stories from IDB:\", idbError);\r\n       document.getElementById('storiesContainer').innerHTML = '<p>Gagal memuat cerita dari sumber manapun.</p>';\r\n       stories = []; // Ensure stories is an empty array on complete failure\r\n    }\r\n  }\r\n\r\n  // Render stories to the DOM\r\n  renderStoriesList(stories); // Renamed function\r\n\r\n  // Initialize map and add markers\r\n  try {\r\n     mapInstance = initMap(); // Assuming initMap is synchronous or handles async internally\r\n     stories.forEach(s => {\r\n       if (s.lat && s.lon) {\r\n         addMarker(mapInstance, s.lat, s.lon, `${s.name || 'Unknown'}: ${s.description || ''}`);\r\n       }\r\n     });\r\n  } catch(mapError) {\r\n     console.error(\"Failed to initialize map or add markers:\", mapError);\r\n     // Handle map initialization error if necessary\r\n  }\r\n\r\n} // End of renderHome\r\n\r\n\r\nfunction renderStoriesList(stories) { // Renamed function\r\n  const container = document.getElementById('storiesContainer');\r\n  if (!container) return;\r\n\r\n  if (!stories || stories.length === 0) {\r\n     container.innerHTML = 'Tidak ada cerita untuk ditampilkan.';\r\n     return;\r\n  }\r\n\r\n  const html = stories.map(s => `\r\n    <div class=\"story\" data-id=\"${s.id}\">\r\n      <a href=\"#/story/${s.id}\" class=\"story-link\">\r\n        <img src=\"${s.photoUrl}\" alt=\"Foto oleh ${s.name || 'Unknown'}\" loading=\"lazy\" width=\"200\"\r\n             style=\"view-transition-name: story-${s.id};\">\r\n      </a>\r\n      <h4>${s.name || 'Unknown'}</h4>\r\n      <p>${s.description || ''}</p>\r\n      <small>${s.createdAt ? new Date(s.createdAt).toLocaleString() : 'No date'}</small>\r\n      </div>\r\n  `).join('');\r\n  container.innerHTML = html;\r\n}\r\n\r\n// Remove the attachDeleteHandlers function entirely\r\n// function attachDeleteHandlers() { ... }","export async function fetchStories(token) {\r\n  const response = await fetch('https://story-api.dicoding.dev/v1/stories?location=1', {\r\n    headers: { Authorization: 'Bearer ' + token }\r\n  });\r\n  const data = await response.json();\r\n  if (data.error) throw new Error(data.message);\r\n  return data.listStory || [];\r\n}","\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nexport function initMap() {\r\n  const map = L.map('map').setView([-2.5489, 118.0149], 5);\r\n\r\n  L.tileLayer('https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?key=EjgIQQJl93uRBUQIPRGe', {\r\n    attribution: '&copy; <a href=\"https://www.maptiler.com\">MapTiler</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n    tileSize: 512,\r\n    zoomOffset: -1\r\n  }).addTo(map);\r\n\r\n  return map;\r\n}\r\n\r\nexport function addMarker(map, lat, lon, description) {\r\n  if (!map || !lat || !lon) return;\r\n  const icon = L.icon({\r\n    iconUrl: 'https://unpkg.com/leaflet@1.9.3/dist/images/marker-icon.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34]\r\n  });\r\n\r\n  const marker = L.marker([lat, lon], { icon }).addTo(map);\r\n  marker.bindPopup(description || 'No description');\r\n}\r\n","export function renderStoryDetail(container, id) {\r\n  console.log('Loaded story detail for ID:', id); // Log untuk debug ID\r\n\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    location.hash = '#/login';\r\n    return;\r\n  }\r\n\r\n  container.innerHTML = '<p>Loading...</p>';\r\n\r\n  fetch(`https://story-api.dicoding.dev/v1/stories/${id}`, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + token\r\n    }\r\n  })\r\n    .then(res => {\r\n      if (!res.ok) throw new Error('Gagal mengambil data');\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      const story = data.story;\r\n\r\n      container.innerHTML = `\r\n        <section class=\"page story-detail\">\r\n          <h2>${story.name}</h2>\r\n          <img src=\"${story.photoUrl}\" alt=\"Foto oleh ${story.name}\" class=\"story-image\" style=\"max-width: 500px; width: 100%; display: block; border-radius: 12px; margin: 20px auto;\">\r\n          <p style=\"margin-top: 20px;\">${story.description}</p>\r\n          <small>Dibuat pada: ${new Date(story.createdAt).toLocaleString()}</small>\r\n          <br><br>\r\n          <a href=\"#/\">← Kembali ke Beranda</a>\r\n        </section>\r\n      `;\r\n    })\r\n    .catch(err => {\r\n      console.error('Gagal memuat cerita:', err);\r\n      container.innerHTML = '<p>Gagal memuat cerita. Silakan coba lagi.</p>';\r\n    });\r\n}\r\n","import { renderHome } from './views/home';\r\nimport { renderAbout } from './views/about';\r\nimport { renderAdd } from './views/add';\r\nimport { renderLogin } from './views/login';\r\nimport { renderRegister } from './views/register';\r\nimport { renderStoryDetail } from './views/story-detail';\r\nimport { renderOfflineStories } from './views/offline';\r\n\r\n\r\nconst routes = {\r\n  '/': renderHome,\r\n  '/home': renderHome,\r\n  '/about': renderAbout,\r\n  '/add': renderAdd,\r\n  '/login': renderLogin,\r\n  '/register': renderRegister,\r\n  '/offline': renderOfflineStories, \r\n};\r\n\r\nfunction loadPage() {\r\n  console.log('[Router] loadPage called.');\r\n  const app = document.getElementById('app');\r\n  if (!app) {\r\n    console.error('[Router] #app element not found!');\r\n    return;\r\n  }\r\n\r\n  const hash = location.hash || '#/';\r\n  let routePath = hash.replace(/^#/, '');\r\n\r\n  // Ensure leading slash\r\n  if (routePath && !routePath.startsWith('/')) {\r\n    routePath = '/' + routePath;\r\n  } else if (routePath === '') {\r\n    routePath = '/';\r\n  }\r\n  console.log(`[Router] Hash: \"${hash}\", Path: \"${routePath}\"`);\r\n\r\n  // Handle dynamic /story/:id route\r\n  const storyMatch = routePath.match(/^\\/story\\/(.+)/);\r\n  if (storyMatch) {\r\n    const storyId = storyMatch[1];\r\n    console.log(`[Router] Matched /story/ route with ID: ${storyId}`);\r\n    const renderDetailFunc = renderStoryDetail;\r\n    if (document.startViewTransition) {\r\n      document.startViewTransition(() => renderDetailFunc(app, storyId));\r\n    } else {\r\n      renderDetailFunc(app, storyId);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // Handle static routes\r\n  const render = routes[routePath];\r\n  console.log(`[Router] Lookup for \"${routePath}\":`, render ? 'Found' : 'Not Found');\r\n\r\n\r\n  if (!render) {\r\n    console.error(`[Router] Route not found for path: \"${routePath}\"`);\r\n    app.innerHTML = '<p>Halaman tidak ditemukan</p>';\r\n    return;\r\n  }\r\n\r\n  console.log(`[Router] Rendering route \"${routePath}\"`);\r\n  const doRender = () => render(app);\r\n\r\n  if (document.startViewTransition) {\r\n    document.startViewTransition(doRender);\r\n  } else {\r\n    doRender();\r\n  }\r\n}\r\n\r\n// --- Initialize Router ---\r\nexport function initRouter() {\r\n  window.removeEventListener('hashchange', loadPage);\r\n  window.removeEventListener('load', loadPage);\r\n  window.addEventListener('hashchange', loadPage);\r\n  window.addEventListener('load', loadPage);\r\n  console.log(\"[Router] Router initialized and listeners attached.\");\r\n}","export function renderAbout(container) {\r\n  container.innerHTML = `\r\n    <section class=\"page about-page\">\r\n      <h2>Tentang Aplikasi</h2>\r\n      <p>Aplikasi ini dibuat untuk menampilkan cerita dari pengguna dengan lokasi di peta menggunakan Leaflet dan MapTiler.</p>\r\n    </section>\r\n  `;\r\n}","import { postStory } from '../presenters/addPresenter';\r\nimport { saveOutboxItem } from '../db.js';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\r\n\r\nexport async function renderAdd(container) {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    location.hash = '#/login';\r\n    return;\r\n  }\r\n\r\n  let stream = null;\r\n  let imageBlob = null;\r\n\r\n  container.innerHTML = `\r\n    <section class=\"page add-page\">\r\n      <h2>Tambah Cerita</h2>\r\n      <form id=\"storyForm\">\r\n        <label for=\"description\">Deskripsi</label>\r\n        <input type=\"text\" id=\"description\" required />\r\n\r\n        <label for=\"photoMethod\">Foto</label>\r\n        <select id=\"photoMethod\">\r\n          <option value=\"file\">Upload File</option>\r\n          <option value=\"camera\">Gunakan Kamera</option>\r\n        </select>\r\n\r\n        <div id=\"cameraSection\" style=\"display: none;\">\r\n          <video id=\"video\" width=\"320\" height=\"240\" autoplay></video>\r\n          <button type=\"button\" id=\"capture\">Ambil Foto</button>\r\n          <canvas id=\"canvas\" width=\"320\" height=\"240\" style=\"display: none;\"></canvas>\r\n        </div>\r\n\r\n        <input type=\"file\" id=\"altPhoto\" accept=\"image/*\" />\r\n\r\n        <label for=\"lat\">Latitude</label>\r\n        <input type=\"text\" id=\"lat\" />\r\n\r\n        <label for=\"lon\">Longitude</label>\r\n        <input type=\"text\" id=\"lon\" />\r\n\r\n        <div id=\"mapForm\" class=\"map-fullwidth\" style=\"margin-bottom: 1rem;\"></div>\r\n\r\n        <button type=\"submit\">Kirim Cerita</button>\r\n      </form>\r\n    </section>\r\n  `;\r\n\r\n  const video        = document.getElementById('video');\r\n  const canvas       = document.getElementById('canvas');\r\n  const captureBtn   = document.getElementById('capture');\r\n  const altFile      = document.getElementById('altPhoto');\r\n  const photoMethod  = document.getElementById('photoMethod');\r\n  const cameraSection= document.getElementById('cameraSection');\r\n  const context      = canvas.getContext('2d');\r\n  const form         = document.getElementById('storyForm');\r\n\r\n  // Toggle camera vs file input\r\n  photoMethod.addEventListener('change', () => {\r\n    const useCam = photoMethod.value === 'camera';\r\n    cameraSection.style.display = useCam ? 'block' : 'none';\r\n    altFile.style.display      = useCam ? 'none' : 'block';\r\n\r\n    if (useCam) {\r\n      navigator.mediaDevices.getUserMedia({ video: true })\r\n        .then(camStream => {\r\n          stream = camStream;\r\n          video.srcObject = stream;\r\n        });\r\n    } else {\r\n      if (stream) stream.getTracks().forEach(t => t.stop());\r\n    }\r\n  });\r\n\r\n  // Capture photo from video\r\n  captureBtn.addEventListener('click', () => {\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    canvas.toBlob(blob => {\r\n      imageBlob = blob;\r\n      alert('Foto berhasil diambil!');\r\n    }, 'image/jpeg');\r\n  });\r\n\r\n  // Handle form submission\r\n  form.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n\r\n    const desc = form.description.value.trim();\r\n    const lat  = form.lat.value.trim();\r\n    const lon  = form.lon.value.trim();\r\n\r\n    const formData = new FormData();\r\n    formData.append('description', desc);\r\n\r\n    if (photoMethod.value === 'camera') {\r\n      if (!imageBlob) {\r\n        alert('Harap ambil foto terlebih dahulu.');\r\n        return;\r\n      }\r\n      formData.append('photo', imageBlob, 'photo.jpg');\r\n    } else {\r\n      if (altFile.files.length === 0) {\r\n        alert('Pilih file terlebih dahulu.');\r\n        return;\r\n      }\r\n      formData.append('photo', altFile.files[0]);\r\n    }\r\n\r\n    if (lat) formData.append('lat', lat);\r\n    if (lon) formData.append('lon', lon);\r\n\r\n    try {\r\n      // 1) Coba kirim langsung ke API\r\n      await postStory(token, formData);\r\n      alert('Cerita berhasil ditambahkan (online).');\r\n      location.hash = '#/';\r\n    } catch (err) {\r\n      // 2) Jika gagal (misal offline), simpan ke outbox IndexedDB\r\n      console.warn('Offline: simpan cerita ke outbox…');\r\n      await saveOutboxItem({ token, formData });\r\n\r\n      // 3) Daftarkan background sync (jika didukung)\r\n      if ('serviceWorker' in navigator && 'SyncManager' in window) {\r\n        const reg = await navigator.serviceWorker.ready;\r\n        try {\r\n          await reg.sync.register('outbox-sync');\r\n          console.log('Background sync terdaftar: outbox-sync');\r\n        } catch (syncErr) {\r\n          console.error('Gagal register sync:', syncErr);\r\n        }\r\n      }\r\n\r\n      alert('Offline. Cerita akan dikirim saat online kembali.');\r\n      location.hash = '#/';\r\n    }\r\n  });\r\n\r\n  // Stop camera when navigating away\r\n  window.addEventListener('hashchange', () => {\r\n    if (stream) stream.getTracks().forEach(t => t.stop());\r\n  }, { once: true });\r\n\r\n  // Initialize Leaflet map\r\n  import('leaflet').then(L => {\r\n    const map = L.map('mapForm').setView([-6.2, 106.8], 10);\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; OpenStreetMap'\r\n    }).addTo(map);\r\n\r\n    const customIcon = L.icon({\r\n      iconUrl: markerIcon,\r\n      iconSize: [25, 41],\r\n      iconAnchor: [12, 41]\r\n    });\r\n\r\n    let marker = L.marker([-6.2, 106.8], {\r\n      draggable: true,\r\n      icon: customIcon\r\n    }).addTo(map);\r\n\r\n    marker.on('dragend', () => {\r\n      const pos = marker.getLatLng();\r\n      form.lat.value = pos.lat;\r\n      form.lon.value = pos.lng;\r\n    });\r\n\r\n    map.on('click', (e) => {\r\n      const { lat, lng } = e.latlng;\r\n      marker.setLatLng([lat, lng]);\r\n      form.lat.value = lat;\r\n      form.lon.value = lng;\r\n    });\r\n  });\r\n}\r\n","export async function postStory(token, formData) {\r\n  const response = await fetch('https://story-api.dicoding.dev/v1/stories', {\r\n    method: 'POST',\r\n    headers: { Authorization: 'Bearer ' + token },\r\n    body: formData,\r\n  });\r\n  const data = await response.json();\r\n  if (data.error) throw new Error(data.message);\r\n  return data;\r\n}","// src/scripts/login.js\r\n // import initPushNotification from '../push-notification-init.js'; // REMOVE\r\n\r\n export function renderLogin(container) {\r\n  // ... (keep existing HTML template) ...\r\n  const html = `\r\n    <section class=\"page login-page\">\r\n      <h2>Login</h2>\r\n      <form id=\"loginForm\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" required>\r\n\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" required>\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>Belum punya akun? <a href=\"#/register\">Daftar</a></p>\r\n    </section>\r\n  `;\r\n\r\n  container.innerHTML = html;\r\n\r\n  const form = document.getElementById('loginForm');\r\n  form.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    const email = form.email.value;\r\n    const password = form.password.value;\r\n\r\n    try {\r\n      const res = await fetch('https://story-api.dicoding.dev/v1/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n      const data = await res.json();\r\n      if (data.error) throw new Error(data.message);\r\n\r\n      localStorage.setItem('token', data.loginResult.token);\r\n      // await initPushNotification(); // REMOVE THIS LINE\r\n      // Instead, update the UI which includes push button states\r\n      if (window.appUpdateLoginStatusUI) {\r\n          window.appUpdateLoginStatusUI();\r\n      }\r\n      location.hash = '#/home'; // Navigate after successful login\r\n    } catch (err) {\r\n      alert('Login gagal: ' + err.message);\r\n    }\r\n  });\r\n}","\r\nexport function renderRegister(container) {\r\n  const html = `\r\n    <section class=\"page register-page\">\r\n      <h2>Register</h2>\r\n      <form id=\"registerForm\">\r\n        <label for=\"name\">Nama</label>\r\n        <input type=\"text\" id=\"name\" required>\r\n\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" required>\r\n        \r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" required>\r\n        \r\n        <button type=\"submit\">Daftar</button>\r\n      </form>\r\n      <p>Sudah punya akun? <a href=\"#/login\">Login</a></p>\r\n    </section>\r\n  `;\r\n\r\n  container.innerHTML = html;\r\n\r\n  const form = document.getElementById('registerForm');\r\n  form.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    const name = form.name.value;\r\n    const email = form.email.value;\r\n    const password = form.password.value;\r\n\r\n    try {\r\n      const res = await fetch('https://story-api.dicoding.dev/v1/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name, email, password })\r\n      });\r\n      const data = await res.json();\r\n      if (data.error) throw new Error(data.message);\r\n\r\n      alert('Registrasi berhasil, silakan login.');\r\n      location.hash = '#/login';\r\n    } catch (err) {\r\n      alert('Gagal registrasi: ' + err.message);\r\n    }\r\n  });\r\n}\r\n","// src/scripts/views/offline.js\r\n import { getStoriesFromIDB } from '../db.js'; // Adjust path if needed\r\n\r\n export async function renderOfflineStories(container) {\r\n   container.innerHTML = `\r\n     <section class=\"page offline-stories-page\">\r\n       <h2>Cerita Tersimpan (Offline)</h2>\r\n       <div id=\"offlineStoriesContainer\">Memuat cerita tersimpan...</div>\r\n     </section>\r\n   `;\r\n\r\n   const offlineContainer = document.getElementById('offlineStoriesContainer');\r\n   if (!offlineContainer) return;\r\n\r\n   try {\r\n     const stories = await getStoriesFromIDB();\r\n     if (stories && stories.length > 0) {\r\n       const html = stories.map(s => `\r\n         <div class=\"story\" data-id=\"${s.id}\">\r\n           <a href=\"#/story/${s.id}\" class=\"story-link\">\r\n             <img src=\"${s.photoUrl}\" alt=\"Foto oleh ${s.name || 'Unknown'}\" loading=\"lazy\" width=\"200\"\r\n                  style=\"view-transition-name: story-${s.id};\">\r\n           </a>\r\n           <h4>${s.name || 'Unknown'}</h4>\r\n           <p>${s.description || ''}</p>\r\n           <small>${s.createdAt ? new Date(s.createdAt).toLocaleString() : 'No date'}</small>\r\n           </div>\r\n       `).join('');\r\n       offlineContainer.innerHTML = html;\r\n     } else {\r\n       offlineContainer.innerHTML = '<p>Tidak ada cerita yang tersimpan di IndexedDB.</p>';\r\n     }\r\n   } catch (err) {\r\n     console.error(\"Failed to load stories from IDB:\", err);\r\n     offlineContainer.innerHTML = '<p>Gagal memuat cerita tersimpan.</p>';\r\n   }\r\n }","// src/scripts/push-subscription.js\r\n\r\nconst VAPID_PUBLIC_KEY = 'BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk';\r\n\r\nconst urlBase64ToUint8Array = (base64String) => {\r\n  // ... (keep existing implementation)\r\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n  const base64 = (base64String + padding)\r\n    .replace(/-/g, '+')\r\n    .replace(/_/g, '/');\r\n  const rawData = atob(base64);\r\n  return Uint8Array.from([...rawData].map((char) => char.charCodeAt(0)));\r\n};\r\n\r\n// --- Request Permission ---\r\nexport async function requestNotificationPermission() {\r\n    if (!('Notification' in window)) {\r\n        throw new Error('Notifications not supported by this browser.');\r\n    }\r\n\r\n    const permission = await Notification.requestPermission();\r\n    if (permission !== 'granted') {\r\n        throw new Error('Notification permission denied.');\r\n    }\r\n    return permission;\r\n}\r\n\r\n\r\n// --- Subscribe ---\r\nexport async function subscribePush(apiToken) {\r\n  if (!('serviceWorker' in navigator) || !('PushManager' in window)) {\r\n    throw new Error('Push Notifications not supported.');\r\n  }\r\n  if (!apiToken) {\r\n      throw new Error('Authentication token is required to subscribe.');\r\n  }\r\n\r\n  // Ensure permission is granted before proceeding\r\n  const permission = Notification.permission;\r\n  if (permission !== 'granted') {\r\n      throw new Error(`Notification permission is ${permission}. Please grant permission.`);\r\n  }\r\n\r\n  try {\r\n    const registration = await navigator.serviceWorker.ready;\r\n    let subscription = await registration.pushManager.getSubscription();\r\n\r\n    if (subscription) {\r\n      console.log('Already subscribed:', subscription);\r\n      // Optional: Resend to backend if needed, or just return\r\n      // await sendSubscriptionToServer(subscription, apiToken); // Uncomment if resending is desired\r\n      return subscription; // Already subscribed\r\n    }\r\n\r\n    subscription = await registration.pushManager.subscribe({\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(VAPID_PUBLIC_KEY),\r\n    });\r\n\r\n    console.log('✅ New Subscription created:', subscription);\r\n    await sendSubscriptionToServer(subscription, apiToken);\r\n    return subscription;\r\n\r\n  } catch (err) {\r\n    console.error('❌ Failed to subscribe:', err);\r\n    // Attempt to unsubscribe if subscription object exists but sending failed\r\n    if (err.name === 'AbortError' || err.message.includes('subscribe')) {\r\n        const registration = await navigator.serviceWorker.getRegistration();\r\n        const currentSubscription = await registration?.pushManager?.getSubscription();\r\n        if (currentSubscription) {\r\n           await currentSubscription.unsubscribe();\r\n           console.log(\"Cleaned up failed subscription attempt.\");\r\n        }\r\n    }\r\n    throw err; // Re-throw the error for the caller\r\n  }\r\n}\r\n\r\n// --- Unsubscribe ---\r\nexport async function unsubscribePush(apiToken) {\r\n  if (!('serviceWorker' in navigator) || !('PushManager' in window)) {\r\n    throw new Error('Push Notifications not supported.');\r\n  }\r\n   if (!apiToken) {\r\n      throw new Error('Authentication token is required to unsubscribe.');\r\n  }\r\n\r\n  try {\r\n    const registration = await navigator.serviceWorker.ready;\r\n    const subscription = await registration.pushManager.getSubscription();\r\n\r\n    if (!subscription) {\r\n      console.log('Not currently subscribed.');\r\n      return true; // Nothing to unsubscribe\r\n    }\r\n\r\n    console.log('Current subscription:', subscription);\r\n\r\n    // Send request to backend first to remove subscription there\r\n    await removeSubscriptionFromServer(subscription, apiToken);\r\n\r\n    // Then unsubscribe locally\r\n    const unsubscribed = await subscription.unsubscribe();\r\n    if (unsubscribed) {\r\n      console.log('✅ Successfully unsubscribed locally.');\r\n    } else {\r\n      console.warn('Local unsubscription call returned false.');\r\n    }\r\n    return unsubscribed;\r\n\r\n  } catch (err) {\r\n    console.error('❌ Failed to unsubscribe:', err);\r\n    // Consider if local unsubscribe should still be attempted if server call fails\r\n    throw err; // Re-throw error\r\n  }\r\n}\r\n\r\n// --- Check Subscription State ---\r\nexport async function getSubscriptionState() {\r\n    if (!('Notification' in window) || !('serviceWorker' in navigator) || !('PushManager' in window)) {\r\n        return { supported: false, permission: 'default', isSubscribed: false };\r\n    }\r\n\r\n    const permission = Notification.permission;\r\n    const registration = await navigator.serviceWorker.ready;\r\n    const subscription = await registration.pushManager.getSubscription();\r\n\r\n    return {\r\n        supported: true,\r\n        permission: permission,\r\n        isSubscribed: !!subscription, // True if subscription object exists\r\n    };\r\n}\r\n\r\n\r\n// --- Helper: Send Subscription to Server ---\r\nasync function sendSubscriptionToServer(subscription, apiToken) {\r\n  const payload = subscription.toJSON();\r\n  // Dicoding API might not support expirationTime\r\n  delete payload.expirationTime;\r\n\r\n  const response = await fetch(\r\n    'https://story-api.dicoding.dev/v1/notifications/subscribe',\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n      body: JSON.stringify(payload),\r\n    }\r\n  );\r\n\r\n  const result = await response.json();\r\n  console.log('📬 Dicoding Push API Subscribe Response:', result);\r\n\r\n  if (!response.ok) {\r\n    throw new Error(result.message || 'Subscription failed on server.');\r\n  }\r\n}\r\n\r\n// --- Helper: Remove Subscription from Server ---\r\nasync function removeSubscriptionFromServer(subscription, apiToken) {\r\n     const payload = subscription.toJSON();\r\n     // Include endpoint for identification on backend\r\n     const bodyPayload = { endpoint: payload.endpoint };\r\n\r\n     const response = await fetch(\r\n         'https://story-api.dicoding.dev/v1/notifications/unsubscribe', // Assuming this is the endpoint\r\n         {\r\n             method: 'POST', // Or DELETE, check API documentation\r\n             headers: {\r\n                 'Content-Type': 'application/json',\r\n                 Authorization: `Bearer ${apiToken}`,\r\n             },\r\n             body: JSON.stringify(bodyPayload),\r\n         }\r\n     );\r\n\r\n     const result = await response.json().catch(() => ({})); // Catch errors if response is not JSON\r\n     console.log('📬 Dicoding Push API Unsubscribe Response:', result);\r\n\r\n     if (!response.ok) {\r\n         // Don't throw an error that prevents local unsubscribe, but log it\r\n         console.error(`Server unsubscribe failed: ${response.status} - ${result.message || 'Unknown server error'}`);\r\n         // Decide if this failure should prevent local unsubscribe. Usually, it shouldn't.\r\n     }\r\n}","// src/scripts/index.js\r\nimport '../styles/style.css';\r\nimport { initRouter } from './router'; // Assuming router.js exports this\r\nimport 'leaflet/dist/leaflet.css';\r\n// Remove direct push init/subscribe calls from here\r\n// import initPushNotification from './push-notification-init.js';\r\n// import { subscribePush } from './push-subscription';\r\n\r\n// Define push-related functions or import them if needed elsewhere\r\nimport { requestNotificationPermission, subscribePush, unsubscribePush, getSubscriptionState } from './push-subscription';\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  // Do NOT automatically init or subscribe here\r\n  // initPushNotification(); // REMOVE\r\n\r\n  // Initialize SPA router\r\n  initRouter();\r\n\r\n  // Setup Navigation Drawer listeners (including new push buttons)\r\n  setupNavigationDrawer(); // New function to handle drawer logic\r\n\r\n  // Skip link accessibility\r\n  const skipLink = document.querySelector('.skip-link');\r\n  if (skipLink) { // Add null check\r\n      skipLink.addEventListener('click', (e) => {\r\n          e.preventDefault();\r\n          const main = document.getElementById('app');\r\n          if (main) {\r\n              main.setAttribute('tabindex', '-1');\r\n              main.focus();\r\n          }\r\n      });\r\n  }\r\n\r\n  // Check login status and update UI (e.g., show/hide push buttons)\r\n  updateLoginStatusUI();\r\n\r\n  // Set up view-transition for in-app navigation (if used)\r\n  // setupViewTransitionNavigation(); // Assuming this exists elsewhere or is not needed here\r\n});\r\n\r\nfunction setupNavigationDrawer() {\r\n    const drawerButton = document.getElementById('drawer-button');\r\n    const navigationDrawer = document.getElementById('navigation-drawer');\r\n    const pushSubscribeButton = document.getElementById('push-subscribe-button'); // Add this ID in index.html\r\n    const pushUnsubscribeButton = document.getElementById('push-unsubscribe-button'); // Add this ID in index.html\r\n\r\n    if (drawerButton && navigationDrawer) {\r\n        drawerButton.addEventListener('click', () => {\r\n            navigationDrawer.classList.toggle('open');\r\n        });\r\n\r\n        // Close drawer when clicking outside or on a link\r\n        document.body.addEventListener('click', (event) => {\r\n          if (!navigationDrawer.contains(event.target) && !drawerButton.contains(event.target)) {\r\n            navigationDrawer.classList.remove('open');\r\n          }\r\n        });\r\n        navigationDrawer.addEventListener('click', (event) => {\r\n           // Close drawer if a navigation link inside it is clicked\r\n           if (event.target.tagName === 'A' && event.target.getAttribute('href')?.startsWith('#')) {\r\n                navigationDrawer.classList.remove('open');\r\n           }\r\n        });\r\n    }\r\n\r\n    // --- Push Button Logic ---\r\n    if (pushSubscribeButton) {\r\n        pushSubscribeButton.addEventListener('click', async () => {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                alert('Silakan login terlebih dahulu untuk berlangganan notifikasi.');\r\n                return;\r\n            }\r\n            try {\r\n                await requestNotificationPermission(); // Ensure permission is granted\r\n                await subscribePush(token);\r\n                alert('Berhasil berlangganan notifikasi!');\r\n                updatePushSubscriptionUI(); \r\n            } catch (err) {\r\n                console.error('Gagal berlangganan notifikasi:', err);\r\n                alert(`Gagal berlangganan: ${err.message}`);\r\n            }\r\n            if (navigationDrawer) navigationDrawer.classList.remove('open');\r\n        });\r\n    }\r\n\r\n    if (pushUnsubscribeButton) {\r\n        pushUnsubscribeButton.addEventListener('click', async () => {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                alert('Silakan login terlebih dahulu.'); \r\n                return;\r\n            }\r\n            try {\r\n                await unsubscribePush(token);\r\n                alert('Berhasil berhenti berlangganan notifikasi.');\r\n                updatePushSubscriptionUI();\r\n            } catch (err) {\r\n                console.error('Gagal berhenti berlangganan:', err);\r\n                alert(`Gagal berhenti berlangganan: ${err.message}`);\r\n            }\r\n             if (navigationDrawer) navigationDrawer.classList.remove('open'); \r\n        });\r\n    }\r\n    updatePushSubscriptionUI();\r\n}\r\n\r\nasync function updatePushSubscriptionUI() {\r\n  const pushSubscribeButton = document.getElementById('push-subscribe-button');\r\n  const pushUnsubscribeButton = document.getElementById('push-unsubscribe-button');\r\n  const subscribeLi = document.getElementById('push-subscribe-li');\r\n  const unsubscribeLi = document.getElementById('push-unsubscribe-li');\r\n  const isLoggedIn = !!localStorage.getItem('token');\r\n  console.log('updatePushSubscriptionUI called. isLoggedIn:', isLoggedIn);\r\n\r\n  // --- ADD NULL CHECKS ---\r\n  if (!subscribeLi || !unsubscribeLi || !pushSubscribeButton || !pushUnsubscribeButton) {\r\n       console.warn(\"Push UI elements not found yet.\"); // Changed to warn\r\n       // Optionally, try again after a short delay if elements might render later\r\n       // setTimeout(updatePushSubscriptionUI, 100);\r\n       return; // Exit if elements aren't found\r\n  }\r\n  // ----------------------\r\n\r\n  // Reset buttons state (keep this)\r\n  pushSubscribeButton.disabled = false;\r\n  pushSubscribeButton.innerHTML = '<i class=\"fas fa-bell\"></i> Subscribe';\r\n  pushUnsubscribeButton.disabled = false;\r\n  pushUnsubscribeButton.innerHTML = '<i class=\"fas fa-bell-slash\"></i> Unsubscribe';\r\n\r\n\r\n  if (!isLoggedIn || !('Notification' in window) || !('serviceWorker' in navigator) || !('PushManager'in window)) {\r\n      console.log('Hiding push buttons (not supported or not logged in).');\r\n      subscribeLi.style.display = 'none';\r\n      unsubscribeLi.style.display = 'none';\r\n      return;\r\n  }\r\n\r\n  try {\r\n      const state = await getSubscriptionState();\r\n      console.log(\"Push subscription state:\", state);\r\n       if (state.isSubscribed) {\r\n           console.log('Showing Unsubscribe button.');\r\n           subscribeLi.style.display = 'none';\r\n           unsubscribeLi.style.display = 'list-item'; // Use list-item\r\n       } else if (state.permission === 'granted') {\r\n           console.log('Showing Subscribe button.');\r\n           subscribeLi.style.display = 'list-item';\r\n           unsubscribeLi.style.display = 'none';\r\n       } else { // denied or default\r\n           console.log('Showing Subscribe button (permission not granted/default).');\r\n           subscribeLi.style.display = 'list-item';\r\n           unsubscribeLi.style.display = 'none';\r\n           if (state.permission === 'denied') {\r\n              pushSubscribeButton.disabled = true;\r\n              pushSubscribeButton.textContent = 'Permission Denied';\r\n           }\r\n       }\r\n  } catch (error) {\r\n     console.error(\"Error updating push UI:\", error);\r\n     // Fallback: Hide both on error? Or show subscribe disabled?\r\n     subscribeLi.style.display = 'none';\r\n     unsubscribeLi.style.display = 'none';\r\n  }\r\n}\r\nfunction updateLoginStatusUI() {\r\n  updatePushSubscriptionUI();\r\n\r\n}\r\n\r\nwindow.appUpdateLoginStatusUI = updateLoginStatusUI;\r\n\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `// extracted by mini-css-extract-plugin\nexport {};`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/style.css\"],\"names\":[],\"mappings\":\"AAAA;QACQ,CAAA\",\"sourcesContent\":[\"// extracted by mini-css-extract-plugin\\nexport {};\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","STORE_STORIES","STORE_OUTBOX","dbPromise","openDB","upgrade","db","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","async","getStoriesFromIDB","getAll","renderHome","container","token","localStorage","getItem","location","hash","innerHTML","logoutBtn","document","getElementById","addEventListener","removeItem","window","appUpdateLoginStatusUI","stories","mapInstance","console","log","response","fetch","headers","Authorization","data","json","error","Error","message","listStory","fetchStories","length","tx","transaction","s","id","store","put","warn","done","saveStoriesToIDB","err","idbError","html","map","photoUrl","name","description","createdAt","Date","toLocaleString","join","renderStoriesList","L","setView","attribution","tileSize","zoomOffset","addTo","initMap","forEach","lat","lon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","bindPopup","addMarker","mapError","renderStoryDetail","then","res","ok","story","catch","routes","stream","imageBlob","video","canvas","captureBtn","altFile","photoMethod","cameraSection","context","getContext","form","useCam","value","style","display","navigator","mediaDevices","getUserMedia","camStream","srcObject","getTracks","t","stop","drawImage","width","height","toBlob","blob","alert","e","preventDefault","desc","trim","formData","FormData","append","files","method","body","postStory","item","get","photoBlob","itemToStore","photoFileName","File","timestamp","toISOString","add","saveOutboxItem","reg","serviceWorker","ready","sync","register","syncErr","once","tileLayer","customIcon","markerIcon","marker","draggable","on","pos","getLatLng","lng","latlng","setLatLng","email","password","JSON","stringify","setItem","loginResult","offlineContainer","loadPage","app","routePath","replace","startsWith","storyMatch","match","storyId","renderDetailFunc","startViewTransition","render","doRender","urlBase64ToUint8Array","base64String","base64","repeat","rawData","atob","Uint8Array","from","char","charCodeAt","updatePushSubscriptionUI","pushSubscribeButton","pushUnsubscribeButton","subscribeLi","unsubscribeLi","isLoggedIn","disabled","state","supported","permission","isSubscribed","Notification","registration","pushManager","getSubscription","getSubscriptionState","textContent","updateLoginStatusUI","removeEventListener","drawerButton","navigationDrawer","classList","toggle","event","target","remove","tagName","getAttribute","requestPermission","requestNotificationPermission","apiToken","subscription","subscribe","userVisibleOnly","applicationServerKey","payload","toJSON","expirationTime","result","sendSubscriptionToServer","includes","getRegistration","currentSubscription","unsubscribe","subscribePush","bodyPayload","endpoint","status","removeSubscriptionFromServer","unsubscribed","unsubscribePush","setupNavigationDrawer","skipLink","querySelector","main","setAttribute","focus","___CSS_LOADER_EXPORT___","push","module"],"sourceRoot":""}